{
    "swagger": "2.0",
    "info": {
        "title": "Imperva API1 WAF",
        "description": "Imperva API1 WAF",
        "version": "2.0.0",
        "termsOfService": "https://www.imperva.com/legal/terms-of-use/",
        "contact": {
            "email": "support@imperva.com"
        }
    },
    "externalDocs": {
        "description": "Find out more about Imperva",
        "url": "http://docs.imperva.com"
    },
    "host": "my.imperva.com",
    "basePath": "/api",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/x-www-form-urlencoded"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "api_id": {
            "type": "apiKey",
            "in": "query",
            "name": "api_id"
        },
        "api_key": {
            "type": "apiKey",
            "in": "query",
            "name": "api_key"
        }
    },
    "security": [
        {
            "api_id": [],
            "api_key": []
        }
    ],
    "paths": {
        "/prov/v1/account": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "account":{
                                "email":"demo_account@incapsula.com",
                                "plan_id":"ent100",
                                "plan_name":"Enterprise",
                                "trial_end_date":"May 28, 2014",
                                "account_id":4722,
                                "ref_id":"123456",
                                "user_name":"John Doe",
                                "account_name":"Demo Account",
                                "logins": {
                                    "login_id":1243,
                                    "email":"demo_account@incapsula.com",
                                    "email_verified":true
                                },
                                "support_level": "Managed",
                                "support_all_tls_versions": "false"
                            },
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"Email address. For example: \"joe@example.com\".",
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true
                    },
                    {
                    	"description":"The newly created account's parent id. If not specified, the invoking account will be assigned as the parent.",
                        "in": "formData",
                        "name": "parent_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The account owner's name. For example: \"John Doe\".",
                        "in": "formData",
                        "name": "user_name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"An identifier of the plan to assign to the new account. For example, ent100 for the Enterprise 100 plan.",
                        "in": "formData",
                        "name": "plan_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Customer specific identifier for this operation.",
                        "in": "formData",
                        "name": "ref_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Account name.",
                        "in": "formData",
                        "name": "account_name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Sets the log reporting level for the site. Possible values: full, security, none, default. Available only for customers that purchased the Logs Integration SKU.",
                        "in": "formData",
                        "name": "log_level",
                        "type": "string",
                        "enum":["default","none","full","security"],
						"required": false
                    },
                    {
                    	"description":"Numeric identifier of the account that purchased the logs integration SKU and which collects the logs. If not specified, operation will be performed on the account identified by the authentication parameters. Available only for customers that purchased the Logs Integration SKU.",
                        "in": "formData",
                        "name": "logs_account_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "account":{
                                "email":"demo_account@incapsula.com",
                                "plan_id":"ent100",
                                "account_id":4722,
                                "user_name":"John Doe",
                                "account_name":"Demo Account",
                                "logins": {
                                    "login_id":1243,
                                    "email":"demo_account@incapsula.com",
                                    "email_verified":true
                                }
                            },
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/configure": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Name of the configuration parameter to set.\n\nPossible values: name | email | plan_id | error_page_template | support_all_tls_versions | naked_domain_san_for_new_www_sites | wildcard_san_for_new_sites | ref_id\n\nNote: plan_id, email, and error_page_template parameters are available for Reseller account only.",
                        "in": "formData",
                        "name": "param",
                        "type": "string",
                        "enum":["name","email","plan_id","error_page_template","support_all_tls_versions","naked_domain_san_for_new_www_sites","wildcard_san_for_new_sites","ref_id"],
						"required": true                        
                    },
                    {
                    	"description":"According to the configuration paramater used.\n\nFor name - the updated name, for e-mail - the updated e-mail address.\n\nFor plan_id - a plan id.\n\nFor error_page_template - a Base64 encoded template for an error page.\n\nFor log_level - Available only for customers that purchased the Logs Integration SKU. Sets the log reporting level for the site. Possible values: full, security, none, default\n\nFor support_all_tls_versions - Use this operation to allow sites in the account to support all TLS versions for connectivity between clients (visitors) and the Imperva service. When this option is set, you can then enable the option per site to support all TLS versions. Possible values: true, false. Note: To remain PCI-compliant, do not enable this option.\n\nFor naked_domain_san_for_new_www_sites - Use this option to determine if the naked domain SAN will be added to the SSL certificate for new www sites. Default value: true\n\nFor wildcard_san_for_new_sites - Use this option to determine if the wildcard SAN or the full domain SAN is added to the Imperva SSL certificate for new sites. Possible values: true, false, default (determined by plan) Default value: default\n\nFor ref_id - Sets the Reference ID, a free-text field that enables you to add a unique identifier to correlate an object in our service, such as a protected website, with an object on the customer side. ",
                        "in": "formData",
                        "name": "value",
                        "type": "string",
						"required": true                        
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "email": "admin@example.com"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/data-privacy/set-region-default": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                        "description":"The data region to use.",
                        "in": "formData",
                        "name": "data_storage_region",
                        "type": "string",
                        "enum":["APAC","EU","US","DEFAULT"],
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/data-privacy/show": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example": {
                            "region": "EU",
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the sub account to operate on.",
                        "in": "formData",
                        "name": "sub_account_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/gettoken": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.  \n\nIn order to use the token, the user must use the following link:\n\nhttps://my.imperva.com/?token={generated_token}",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "generated_token": "344ebcaf34dff34"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/list": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
						"required": false
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "accounts":[
                                {
                                    "parent_id":123,
                                    "email":"demo_account@incapsula.com",
                                    "plan_id":"ent100",
                                    "account_id":4722,
                                    "user_name":"John Doe",
                                    "account_name":"Demo Account",
                                    "logins": {
                                        "login_id":1243,
                                        "email":"demo_account@incapsula.com",
                                        "email_verified":true
                                    }
                                }
                            ],
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/setlog": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Sets the log reporting level for the site. Possible values: full, security, none, default. Available only for customers that purchased the Logs Integration SKU.",
                        "in": "formData",
                        "name": "log_level",
                        "type": "string",
                        "enum":["default","none","full","security"],
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "log_level": "full"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/setAmazonSiemStorage": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"S3 bucket name.",
                        "in": "formData",
                        "name": "bucket_name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"S3 access key.",
                        "in": "formData",
                        "name": "access_key",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"S3 secret key.",
                        "in": "formData",
                        "name": "secret_key",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                               "message": "Configuration was successfully updated"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/setSftpSiemStorage": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The IP address of your SFTP server.",
                        "in": "formData",
                        "name": "host",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"A user name that will be used to log in to the SFTP server.",
                        "in": "formData",
                        "name": "user_name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"A corresponding password for the user account used to log in to the SFTP server.",
                        "in": "formData",
                        "name": "password",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The path to the directory on the SFTP server.",
                        "in": "formData",
                        "name": "destination_folder",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "message": "Configuration was successfully updated"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/setDefaultSiemStorage": {
            "post": {
                "parameters": [
                    {
                        "description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                               "message": "Configuration was successfully updated"
                            }
                        }
                    }
                }
            }
        },        
        "/prov/v1/accounts/subscription": {
            "post": {
                "parameters": [
                    {
                        "description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "planStatus": {
                            "accountId": 12345,
                            "accountName": "demo_account@incapsula.com",
                            "websiteProtection": {
                                "name": "Website Protection",
                                "planSectionRows": [
                                    {
                                        "name": "Additional Sites",
                                        "purchased": "100",
                                        "used": "2"
                                    },
                                    {
                                        "name": "Load Balancing (old)",
                                        "purchased": "0",
                                        "used": "0"
                                    },
                                    {
                                        "name": "Additional Login Protect Users",
                                        "purchased": "5",
                                        "used": "0"
                                    }
                                ]
                            },
                            "infrastructureProtection": {
                                "name": "Infrastructure Protection",
                                "planSectionRows": [
                                    {
                                        "name": "On Demand Bandwidth (Clean traffic)",
                                        "purchased": "0",
                                        "used": ""
                                    },
                                    {
                                        "name": "GRE Tunnel Pairs",
                                        "purchased": "0  ",
                                        "used": "0"
                                    }
                                ]
                            },
                            "dnsProtection": {
                                "name": "DNS Protection",
                                "planSectionRows": [
                                    {
                                        "name": "Additional DNS Zones",
                                        "purchased": "0",
                                        "used": "0"
                                    }
                                ]
                            },
                            "additionalServices": {
                                "name": "Additional Services",
                                "planSectionRows": [
                                    {
                                        "name": "Always On Bandwidth (Clean traffic)",
                                        "purchased": "10Mbps",
                                        "used": "N/A"
                                    },
                                    {
                                        "name": "DDoS Protection",
                                        "purchased": "None",
                                        "used": ""
                                    },
                                    {
                                        "name": "Support Level",
                                        "purchased": "Standard",
                                        "used": "Standard"
                                    },
                                    {
                                        "name": "SIEM Integration",
                                        "purchased": "10",
                                        "used": "0"
                                    },
                                    {
                                        "name": "Web Attack Analytics",
                                        "purchased": "0",
                                        "used": ""
                                    }
                                ]
                            }
                        },
                        "bandwidthHistory": [
                            {
                                "billingCycle": "Current billing cycle",
                                "onDemandBandwidth": "0bps",
                                "alwaysOnBandwidth": "3.5kbps"
                            },
                            {
                                "billingCycle": "Previous billing cycle",
                                "onDemandBandwidth": "0bps",
                                "alwaysOnBandwidth": "15kbps"
                            },
                            {
                                "billingCycle": "Earlier billing cycle",
                                "onDemandBandwidth": "0bps",
                                "alwaysOnBandwidth": "7.7kbps"
                            }
                        ],
                        "res": 0,
                        "res_message": "OK"
                    }
                }
            }
        },
        "/prov/v1/accounts/testS3Connection": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"S3 bucket name.",
                        "in": "formData",
                        "name": "bucket_name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"S3 access key.",
                        "in": "formData",
                        "name": "access_key",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"S3 secret key.",
                        "in": "formData",
                        "name": "secret_key",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Save this configuration if the test connection was successful. Default value: false ",
                        "in": "formData",
                        "name": "save_on_success",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "message": "Test connection succeeded"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/accounts/testSftpConnection": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The IP address of your SFTP server.",
                        "in": "formData",
                        "name": "host",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"A user name that will be used to log in to the SFTP server.",
                        "in": "formData",
                        "name": "user_name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"A corresponding password for the user account used to log in to the SFTP server.",
                        "in": "formData",
                        "name": "password",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The path to the directory on the SFTP server.",
                        "in": "formData",
                        "name": "destination_folder",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Save this configuration if the test connection was successful. Default value: false",
                        "in": "formData",
                        "name": "save_on_success",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "message": "Test connection succeeded"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/add/ip": {
            "post": {
                "parameters": [
                    {
                    	"description":"Public origin IP to onboard to service",
                        "in": "formData",
                        "name": "origin_id",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"Provide 'true' to enable the Proxy Protocol setting (disabled by default)",
                        "in": "formData",
                        "name": "enable_ha_protocol",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Optional description for the generated Edge IP",
                        "in": "formData",
                        "name": "description",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "origin_ip": "1.2.3.4",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/add/cname": {
            "post": {
                "parameters": [
                    {
                    	"description":"CNAME record to onboard to service",
                        "in": "formData",
                        "name": "cname",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"Provide 'true' to enable the Proxy Protocol setting (disabled by default)",
                        "in": "formData",
                        "name": "enable_ha_protocol",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Optional description for the generated Edge IP",
                        "in": "formData",
                        "name": "description",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "cname": "imperva.test.com",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/add/dns-with-ip": {
            "post": {
                "parameters": [
                    {
                    	"description":"Domain name to onboard to service",
                        "in": "formData",
                        "name": "dns_name",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"Public origin IP to onboard to service",
                        "in": "formData",
                        "name": "origin_ip",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Provide 'true' to disable DNS resolution check (enabled by default)",
                        "in": "formData",
                        "name": "disable_dns_check ",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Provide 'true' to enable the Proxy Protocol setting (disabled by default)",
                        "in": "formData",
                        "name": "enable_ha_protocol",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Optional description for the generated Edge IP",
                        "in": "formData",
                        "name": "description",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "resolved_ips": [
                                "157.166.226.25",
                                "157.166.248.11",
                                "157.166.249.10"
                            ],
                            "origin_ip": "157.166.249.10",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/add/dns-with-cname": {
            "post": {
                "parameters": [
                    {
                    	"description":"Domain name to onboard to service",
                        "in": "formData",
                        "name": "dns_name",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"CNAME record to onboard to service",
                        "in": "formData",
                        "name": "cname",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Provide 'true' to disable DNS resolution check (enabled by default)",
                        "in": "formData",
                        "name": "disable_dns_check ",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Provide 'true' to enable the Proxy Protocol setting (disabled by default)",
                        "in": "formData",
                        "name": "enable_ha_protocol",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Optional description for the generated Edge IP",
                        "in": "formData",
                        "name": "description",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "resolved_cnames": [
                                "imperva.test.com"
                            ],
                            "cname": "imperva.test.com",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/edit/ip": {
            "post": {
                "parameters": [
                    {
                    	"description":"Public origin IP to onboard to service",
                        "in": "formData",
                        "name": "origin_ip",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"Imperva generated Edge IP",
                        "in": "formData",
                        "name": "edge_ip",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "origin_ip": "5.6.7.8",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/edit/cname": {
            "post": {
                "parameters": [
                    {
                    	"description":"CNAME to onboard to service",
                        "in": "formData",
                        "name": "cname",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"Imperva generated Edge IP",
                        "in": "formData",
                        "name": "edge_ip",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "cname": "imperva.test.com",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/edit/dns-with-ip": {
            "post": {
                "parameters": [
                    {
                    	"description":"Public origin IP to onboard to service",
                        "in": "formData",
                        "name": "origin_ip",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"Domain name to onboard to service",
                        "in": "formData",
                        "name": "dns_name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Imperva generated Edge IP",
                        "in": "formData",
                        "name": "edge_ip",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Provide 'true' to disable DNS resolution check (enabled by default)",
                        "in": "formData",
                        "name": "disable_dns_check",
                        "type": "boolean",
						"required": false
                    }                
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "resolved_ips": [
                                "157.166.226.25",
                                "157.166.248.11",
                                "157.166.249.10"
                            ],
                            "origin_ip": "157.166.249.10",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/edit/dns-with-cname": {
            "post": {
                "parameters": [
                    {
                    	"description":"CNAME to onboard to service",
                        "in": "formData",
                        "name": "cname",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Domain name to onboard to service",
                        "in": "formData",
                        "name": "dns_name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Imperva generated Edge IP",
                        "in": "formData",
                        "name": "edge_ip",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Provide 'true' to disable DNS resolution check (enabled by default)",
                        "in": "formData",
                        "name": "disable_dns_check",
                        "type": "boolean",
						"required": false
                    }                
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "resolved_cnames": [
                                "imperva.test.com"
                            ],
                            "cname": "imperva.test.com",
                            "edge_ip": "172.17.14.1",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/edit/ha-protocol": {
            "post": {
                "parameters": [
                    {
                    	"description":"Imperva generated Edge IP",
                        "in": "formData",
                        "name": "edge_ip",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Provide 'true' to disable DNS resolution check (enabled by default)",
                        "in": "formData",
                        "name": "disable_dns_check",
                        "type": "boolean",
						"required": true
                    }                
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/ddos-protection/edge-ip/remove": {
            "post": {
                "parameters": [
                    {
                    	"description":"Imperva generated Edge IP",
                        "in": "formData",
                        "name": "edge_ip",
                        "type": "string",
						"required": true
                    }                
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/subaccounts/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"The name of the sub account.",
                        "in": "formData",
                        "name": "sub_account_name",
                        "type": "string",
						"required": true                        
                    },
                    {
                    	"description":"The newly created account's parent id. If not specified, the invoking account will be assigned as the parent account. (optional)",
                        "in": "formData",
                        "name": "parent_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Customer specific identifier for this operation.",
                        "in": "formData",
                        "name": "ref_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Sets the log reporting level for the site.  \nPossible values: full, security, none, default. \nAvailable only for customers that purchased the Logs Integration SKU.",
                        "in": "formData",
                        "name": "log_level",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Numeric identifier of the account that purchased the logs integration SKU and which collects the logs. If not specified, operation will be performed on the account identified by the authentication parameters. \nAvailable only for customers that purchased the Logs Integration SKU.",
                        "in": "formData",
                        "name": "logs_account_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "sub_account":{
                                "sub_account_id":123456,
                                "sub_account_name":"My Sub Account",
                                "is_for_special_ssl_configuration":false,   
                                "support_level":"Standard"
                            },
                            "res":0,
                            "res_message":"OK",
                            "debug_info":{
                                "id-info":"999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/subaccounts/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the sub account to operate on.",
                        "in": "formData",
                        "name": "sub_account_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/accounts/listSubAccounts": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
						"required": false
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "resultList":[
                                {
                                "sub_account_id":123456,
                                "sub_account_name":"My Sub Account",
                                "is_for_special_ssl_configuration":false,
                                "support_level":"Standard"
                                },
                                {
                                "sub_account_id":123457,
                                "sub_account_name":"My Other Sub Account",   
                                "is_for_special_ssl_configuration":true,
                                "support_level":"Standard"
                                },
                            ],
                            "res":0,
                            "res_message":"OK",
                            "debug_info":{
                                "id-info":"999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/caa/check-compliance": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "non_compliant_sans": [
                                "*.caa.incaptest.co"
                            ],
                            "res": 0,
                            "res_message": "OK",
                        }
                    }
                }
            }
        },
        "/prov/v1/domain/emails": {
            "post": {
                "parameters": [
                    {
                    	"description":"The domain name of the site. For example: www.example.com, hello.example.com, example.com",
                        "in": "formData",
                        "name": "domain",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "domain_emails": [
                                "admin@example.com",
                                "webmaster@example.com"
                            ]
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/data-privacy/region-change": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The data region to use.",
                        "in": "formData",
                        "name": "data_storage_region",
                        "type": "string",
                        "enum":["APAC","EU","US","DEFAULT"],
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/data-privacy/show": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "region": "EU",
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/data-privacy/override-by-geo": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"A boolean parameter. If it is set to \"true\", the data storage region for each new site will be based on the geolocation of the origin server.",
                        "in": "formData",
                        "name": "override_site_regions_by_geo",
                        "type": "boolean",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/data-privacy/show-override-by-geo": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "override_site_regions_by_geo": true,
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },

        "/prov/v1/sites/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"The domain name of the site. For example: www.example.com, hello.example.com, example.com",
                        "in": "formData",
                        "name": "domain",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Customer specific identifier for this operation.",
                        "in": "formData",
                        "name": "ref_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"If this value is \"false\", end users will not get emails about the add site process such as \"DNS instructions\" and \"SSL setup\".",
                        "in": "formData",
                        "name": "send_site_setup_emails",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Manually set the web server IP/CNAME.",
                        "in": "formData",
                        "name": "site_ip",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"If this value is \"true\", manually set the site to support SSL. This option is only available for sites with manually configured IP/CNAME and for specific accounts.",
                        "in": "formData",
                        "name": "force_ssl",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Use \"true\" to add the naked domain SAN to a www site’s SSL certificate. Default value: true",
                        "in": "formData",
                        "name": "naked_domain_san",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Use \"true\" to add the wildcard SAN or \"false\" to add the full domain SAN to the site’s SSL certificate. Default value: true",
                        "in": "formData",
                        "name": "wildcard_san",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Sets the log reporting level for the site. Possible values: full, security, none, default. Available only for customers that purchased the Logs Integration SKU.",
                        "in": "formData",
                        "name": "log_level",
                        "type": "string",
                        "enum":["default","none","full","security"]
                    },
                    {
                    	"description":"Available only for customers that purchased the Logs Integration SKU. Numeric identifier of the account that purchased the logs integration SKU and which collects the logs. If not specified, operation will be performed on the account identified by the authentication parameters",
                        "in": "formData",
                        "name": "logs_account_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "status": "pending_dns_changes",
                            "ips": [
                                "34.33.22.1"
                            ],
                            "dns": [
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "CNAME",
                                    "set_data_to": "x343.incapdns.net"
                                },
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "original_dns": [
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.11"
                                    ]
                                },
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.50"
                                    ]
                                }
                            ],
                            "warnings": [
                                {
                                    "type": "FTP",
                                    "dns_record_name": "ftp.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                },
                                {
                                    "type": "MAIL",
                                    "mail_record_name": "mail.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "security": {
                                "waf": {
                                    "rules": [
                                        {
                                            "id": "api.threats.bot_access_control",
                                            "name": "Bot Access Control",
                                            "block_bad_bots": true,
                                            "challenge_suspected_bots": true
                                        },
                                        {
                                            "id": "api.threats.sql_injection",
                                            "name": "SQL Injection",
                                            "action": "api.threats.action.block_request",
                                            "action_text": "Block Request"
                                        },
                                        {
                                            "id": "api.threats.cross_site_scripting",
                                            "name": "Cross Site Scripting (XSS)",
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/gsddg",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 244711494
                                                }
                                            ],
                                            "action": "api.threats.action.alert",
                                            "action_text": "Alert Only"
                                        },
                                        {
                                            "id": "api.threats.illegal_resource_access",
                                            "name": "Illegal Resource Access",
                                            "action": "api.threats.action.block_user",
                                            "action_text": "Block User"
                                        },
                                        {
                                            "id": "api.threats.ddos",
                                            "name": "DDoS",
                                            "activation_mode": "api.threats.ddos.activation_mode.off",
                                            "activation_mode_text": "Off",
                                            "ddos_traffic_threshold": "api.threats.ddos.ddos_trassic_threshold",
                                            "ddos_traffic_threshold_text": "750"
                                        },
                                        {
                                            "id": "api.threats.backdoor",
                                            "name": "Backdoor Protect",
                                            "action": "api.threats.action.quarantine_url",
                                            "action_text": "Auto-Quarantine"
                                        },
                                        {
                                            "action": "api.threats.action.block_ip",
                                            "action_text": "Block IP",
                                            "id": "api.threats.remote_file_inclusion",
                                            "name": "Remote File Inclusion"
                                        }
                                    ]
                                },
                                "acls": {
                                    "rules": [
                                        {
                                            "ips": [
                                                "2.3.4.5"
                                            ],
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/home",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 493271006
                                                }
                                            ],
                                            "id": "api.acl.blacklisted_ips",
                                            "name": "Visitors from blacklisted IPs"
                                        }
                                    ]
                                }
                            },
                            "active": "active",
                            "acceleration_level": "advanced",
                            "site_creation_date": 1372573842000,
                            "sealLocation": {
                                "id": "api.seal_location.bottom_right",
                                "name": "Bottom right"
                            },
                            "ssl": {
                                "origin_server": {
                                    "detected": true,
                                    "detectionStatus": "ok"
                                },
                                "generated_certificate": {
                                    "ca": "globalsign",
                                    "validation_method": "dns",
                                    "validation_data": [
                                        {
                                            "dns_record_name": "www.example.com",
                                            "set_type_to": "TXT",
                                            "set_data_to": "globalsign-domain-verification=rgwlWGF7wQsdWdhbd54pGGruzskFMVezwMvnUtRAzW"
                                        }
                                    ],
                                    "san": [
                                        "*.example.com",
                                        "example.com"
                                    ],
                                    "validation_status": "pending_user_action"
                                },
                                "custom_certificate": {
                                    "active": true,
                                    "expirationDate": 1460100446000,
                                    "revocationError": false,
                                    "validityError": false,
                                    "chainError": false,
                                    "hostnameMismatchError": true
                                }
                            },
                            "login_protect": {
                                "enabled": true,
                                "specific_users_list": [
                                    {
                                        "email": "john@example.com",
                                        "name": "John Doe",
                                        "status": "INVITATION_SENT"
                                    },
                                    {
                                        "email": "jane@example.com",
                                        "name": "Jane Doe",
                                        "status": "ACTIVATED"
                                    }
                                ],
                                "send_lp_notifications": true,
                                "allow_all_users": false,
                                "authentication_methods": [
                                    "sms",
                                    "ga"
                                ],
                                "urls": [
                                    "/wp-admin"
                                ],
                                "url_patterns": [
                                    "PREFIX"
                                ]
                            },
                            "performance_configuration": {
                                "advanced_caching_rules": {
                                    "never_cache_resources": [
                                        {
                                            "pattern": "SUFFIX",
                                            "url": "/test.html"
                                        }
                                    ],
                                    "always_cache_resources": [
                                        {
                                            "pattern": "NOT_EQUALS",
                                            "url": "/index.html",
                                            "ttl": 5,
                                            "ttlUnits": "SECONDS"
                                        },
                                        {
                                            "pattern": "EQUALS",
                                            "url": "/home.html",
                                            "ttl": 6,
                                            "ttlUnits": "DAYS"
                                        }
                                    ]
                                },
                                "acceleration_level": "advanced",
                                "async_validation": true,
                                "minify_javascript": true,
                                "minify_css": true,
                                "minify_static_html": true,
                                "compress_jpeg": true,
                                "progressive_image_rendering": true,
                                "aggressive_compression": true,
                                "compress_png": true,
                                "on_the_fly_compression": true,
                                "tcp_pre_pooling": true,
                                "comply_no_cache": true,
                                "comply_vary": true,
                                "use_shortest_caching": true,
                                "support_all_tls_versions": true,
                                "prefer_last_modified": true,
                                "disable_client_side_caching": true,
                                "cache_headers": [
                                    {
                                        "headerName": "Content-type: application/pdf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/cache/purge": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The pattern of the resource to be purged from the cache. For example:\n\n\nResource_name - Resources that contain Resource_name will be purged\n\n^Resource_name- Resources that start with Resource_name will be purged\n\nResource_name$ - Resources that end with Resource_name will be purged",
                        "in": "formData",
                        "name": "purge_pattern",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"A comma separated list of tag names to purge.",
                        "in": "formData",
                        "name": "purge_tag_names",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/configure": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Name of configuration parameter to set. See table below.\n\nactive: One of: active | bypass.\n\nsite_ip: Comma separated list of IPs. For example: 8.8.8.8,1.2.2.2\n\ndomain_validation: One of email | html | dns\n\napprover: Sets the approver e-mail address that will be used to perform SSL domain validation.\n\nignore_ssl: Sets the ignore SSL flag (if the site is in pending-select-approver state). Pass \"true\" in the value parameter.\n\nacceleration_level: Sets the acceleration level of the site, one of: none | standard | aggressive. It is advised to use the newer Modify caching mode API call instead, as it provides enhanced functionality.\n\nseal_location: Sets the seal location, e.g. \"api.seal_location.bottom_right\".\n\ndomain_redirect_to_full: Sets the redirect naked to full flag. Pass \"true\" in the value parameter.\n\nremove_ssl: Sets the remove SSL from site flag. Pass \"true\" in the value parameter.\n\nref_id: Sets the Reference ID, a free-text field that enables you to add a unique identifier to correlate an object in our service, such as a protected website, with an object on the customer side.",
                        "in": "formData",
                        "name": "param",
                        "type": "string",
                        "enum":["active","site_ip","domain_validation","approver","ignore_ssl","acceleration_level","seal_location","remove_ssl","ref_id"],
						"required": false
                    },
                    {
                    	"description":"According to the param value. See info on param",
                        "in": "formData",
                        "name": "value",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "domain_email": "admin@example.com"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/configure/acl": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The id of the acl, e.g api.acl.blacklisted_ips:\r\n• api.acl.blacklisted_countries - Visitors from blacklisted countries/continents\r\n• api.acl.blacklisted_urls - Visitors from blacklisted URLs\r\n• api.acl.blacklisted_ips - Visitors from blacklisted IPs\r\n• api.acl.whitelisted_ips - Visitors from whitelisted IPs\n\r\n\rBlacklisted URLs Example:\r\nrule_id=api.acl.blacklisted_urls\r\nurls=%2Fadmin%2Fdashboard%2Fstats%3Fx%3D1%26y%3D2%23z%3D3,%2Fadmin\r\nurl_patterns=contains,equals\r\n\r\nBlacklisted Countries Example:\r\nrule_id=api.acl.blacklisted_countries\r\ncountries=CA,US\r\ncontinents=SA\r\n\r\nBlacklisted IPs Example:\r\nrule_id=api.acl.blacklisted_ips\r\nips=1.2.3.4,192.168.1.1-192.168.1.100,192.168.1.1/24\r\n\r\nWhitelisted IPs Example:\r\nrule_id=api.acl.whitelisted_ips\r\nips=1.2.3.4\r\n\r\nDelete the IPs ACL Example (send an empty list of IPs):\r\nrule_id=api.acl.blacklisted_ips\r\nips=\r\n",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
                        "enum":["api.acl.blacklisted_countries","api.acl.blacklisted_ips","api.acl.blacklisted_urls","api.acl.whitelisted_ips"],
						"required": true
                    },
                    {
                    	"description":"A comma separated list of resource paths.\n\nFor example, /home and /admin/index.html are resource paths, while http://www.example.com/home is not. ",
                        "in": "formData",
                        "name": "urls",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                        "description":"A comma separated list of url patterns. Possible values: contains | equals | prefix | suffix | not_equals | not_contain | not_prefix | not_suffix. The patterns should be in accordance with the matching urls sent by the urls parameter.",
                        "in": "formData",
                        "name": "url_patterns",
                        "type": "string",
                        "items":{"type":"string"},
                        "required": false
                    },
                    {
                    	"description":"A comma separated list of country codes.",
                        "in": "formData",
                        "name": "countries",
                        "type": "string",
                        "uniqueItems":false,
                        "enum":["AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW"],
						"required": false
                    },
                    {
                    	"description":"A comma separated list of continent codes.",
                        "in": "formData",
                        "name": "continents",
                        "type": "string",
                        "uniqueItems":false,
                        "enum":["AF","AN","AS","EU","NA","OC","SA"],
						"required": false
                    },
                    {
                    	"description":"A comma seperated list of IPs or IP ranges, e.g: 192.168.1.1, 192.168.1.1-192.168.1.100 or 192.168.1.1/24",
                        "in": "formData",
                        "name": "ips",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "status": "pending_dns_changes",
                            "ips": [
                                "34.33.22.1"
                            ],
                            "dns": [
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "CNAME",
                                    "set_data_to": "x343.incapdns.net"
                                },
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "original_dns": [
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.11"
                                    ]
                                },
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.50"
                                    ]
                                }
                            ],
                            "warnings": [
                                {
                                    "type": "FTP",
                                    "dns_record_name": "ftp.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                },
                                {
                                    "type": "MAIL",
                                    "mail_record_name": "mail.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "security": {
                                "waf": {
                                    "rules": [
                                        {
                                            "id": "api.threats.bot_access_control",
                                            "name": "Bot Access Control",
                                            "block_bad_bots": true,
                                            "challenge_suspected_bots": true
                                        },
                                        {
                                            "id": "api.threats.sql_injection",
                                            "name": "SQL Injection",
                                            "action": "api.threats.action.block_request",
                                            "action_text": "Block Request"
                                        },
                                        {
                                            "id": "api.threats.cross_site_scripting",
                                            "name": "Cross Site Scripting (XSS)",
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/gsddg",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 244711494
                                                }
                                            ],
                                            "action": "api.threats.action.alert",
                                            "action_text": "Alert Only"
                                        },
                                        {
                                            "id": "api.threats.illegal_resource_access",
                                            "name": "Illegal Resource Access",
                                            "action": "api.threats.action.block_user",
                                            "action_text": "Block User"
                                        },
                                        {
                                            "id": "api.threats.ddos",
                                            "name": "DDoS",
                                            "activation_mode": "api.threats.ddos.activation_mode.off",
                                            "activation_mode_text": "Off",
                                            "ddos_traffic_threshold": "api.threats.ddos.ddos_trassic_threshold",
                                            "ddos_traffic_threshold_text": "750"
                                        },
                                        {
                                            "id": "api.threats.backdoor",
                                            "name": "Backdoor Protect",
                                            "action": "api.threats.action.quarantine_url",
                                            "action_text": "Auto-Quarantine"
                                        },
                                        {
                                            "action": "api.threats.action.block_ip",
                                            "action_text": "Block IP",
                                            "id": "api.threats.remote_file_inclusion",
                                            "name": "Remote File Inclusion"
                                        }
                                    ]
                                },
                                "acls": {
                                    "rules": [
                                        {
                                            "ips": [
                                                "2.3.4.5"
                                            ],
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/home",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 493271006
                                                }
                                            ],
                                            "id": "api.acl.blacklisted_ips",
                                            "name": "Visitors from blacklisted IPs"
                                        }
                                    ]
                                }
                            },
                            "active": "active",
                            "acceleration_level": "advanced",
                            "site_creation_date": 1372573842000,
                            "sealLocation": {
                                "id": "api.seal_location.bottom_right",
                                "name": "Bottom right"
                            },
                            "ssl": {
                                "origin_server": {
                                    "detected": true,
                                    "detectionStatus": "ok"
                                },
                                "generated_certificate": {
                                    "ca": "globalsign",
                                    "validation_method": "dns",
                                    "validation_data": [
                                        {
                                            "dns_record_name": "www.example.com",
                                            "set_type_to": "TXT",
                                            "set_data_to": "globalsign-domain-verification=rgwlWGF7wQsdWdhbd54pGGruzskFMVezwMvnUtRAzW"
                                        }
                                    ],
                                    "san": [
                                        "*.example.com",
                                        "example.com"
                                    ],
                                    "validation_status": "pending_user_action"
                                },
                                "custom_certificate": {
                                    "active": true,
                                    "expirationDate": 1460100446000,
                                    "revocationError": false,
                                    "validityError": false,
                                    "chainError": false,
                                    "hostnameMismatchError": true
                                }
                            },
                            "login_protect": {
                                "enabled": true,
                                "specific_users_list": [
                                    {
                                        "email": "john@example.com",
                                        "name": "John Doe",
                                        "status": "INVITATION_SENT"
                                    },
                                    {
                                        "email": "jane@example.com",
                                        "name": "Jane Doe",
                                        "status": "ACTIVATED"
                                    }
                                ],
                                "send_lp_notifications": true,
                                "allow_all_users": false,
                                "authentication_methods": [
                                    "sms",
                                    "ga"
                                ],
                                "urls": [
                                    "/wp-admin"
                                ],
                                "url_patterns": [
                                    "PREFIX"
                                ]
                            },
                            "performance_configuration": {
                                "advanced_caching_rules": {
                                    "never_cache_resources": [
                                        {
                                            "pattern": "SUFFIX",
                                            "url": "/test.html"
                                        }
                                    ],
                                    "always_cache_resources": [
                                        {
                                            "pattern": "NOT_EQUALS",
                                            "url": "/index.html",
                                            "ttl": 5,
                                            "ttlUnits": "SECONDS"
                                        },
                                        {
                                            "pattern": "EQUALS",
                                            "url": "/home.html",
                                            "ttl": 6,
                                            "ttlUnits": "DAYS"
                                        }
                                    ]
                                },
                                "acceleration_level": "advanced",
                                "async_validation": true,
                                "minify_javascript": true,
                                "minify_css": true,
                                "minify_static_html": true,
                                "compress_jpeg": true,
                                "progressive_image_rendering": true,
                                "aggressive_compression": true,
                                "compress_png": true,
                                "on_the_fly_compression": true,
                                "tcp_pre_pooling": true,
                                "comply_no_cache": true,
                                "comply_vary": true,
                                "use_shortest_caching": true,
                                "support_all_tls_versions": true,
                                "prefer_last_modified": true,
                                "disable_client_side_caching": true,
                                "cache_headers": [
                                    {
                                        "headerName": "Content-type: application/pdf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/configure/htmlInjections": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The URL where the content is injected.",
                        "in": "formData",
                        "name": "url",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The url pattern. One of: contains | not_contains | equals | not_equals | prefix | suffix | not_prefix | not_suffix",
                        "in": "formData",
                        "name": "url_pattern",
                        "type": "string",
                        "enum":["contains","not_contains","equals","not_equals","prefix","suffix","not_prefix","not_suffix"],
						"required": true
                    },
                    {
                    	"description":"The location of the injection inside the URL ('head' or 'body_end').",
                        "in": "formData",
                        "name": "location",
                        "type": "string",
                        "enum":["head","body_end"],
						"required": true
                    },
                    {
                    	"description":"The injected HTML snippet, Base64-encoded.",
                        "in": "formData",
                        "name": "content",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Whether or not to delete existing HTML content.\n\nPossible values: true/false.  In this case, url/url_pattern,location, and delete_content=true",
                        "in": "formData",
                        "name": "delete_content",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "html_injections":[
                                {
                                    "url":"/",
                                    "url_pattern":"prefix",
                                    "location":"head",
                                    "content":"your_base_64_encoded_content_here"
                                }
                            ],
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/configure/security": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The id of the security configuration, e.g ",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
                        "enum":["api.threats.bot_access_control","api.threats.sql_injection","api.threats.cross_site_scripting","api.threats.illegal_resource_access","api.threats.backdoor","api.threats.ddos","api.threats.remote_file_inclusion"],
						"required": true
                    },
                    {
                    	"description":"Whether or not to block bad bots. Possible values: true, false",
                        "in": "formData",
                        "name": "block_bad_bots",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Whether or not to send a challenge to clients that are suspected to be bad bots (CAPTCHA for example). Possible values: true, false",
                        "in": "formData",
                        "name": "challenge_suspected_bots",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Possible values: off, auto, on:\noff - security measures are disabled even if site is under a DDoS attack\nauto - security measures will be activated automatically when the system suspects site is under a DDoS attack\non - security measures are enabled even if site is not under a DDoS attack",
                        "in": "formData",
                        "name": "activation_mode",
                        "type": "string",
                        "enum":["off","auto","on"],
						"required": false
                    },
                    {
                    	"description":"The action that should be taken when a threat is detected, for example:\napi.threats.action.disabled: Threat is not blocked, site owner is not notified.\napi.threats.action.alert: Threat is not blocked, site owner is notified.\napi.threats.action.block_request: Threat blocked by stopping the request, site owner is notified.\napi.threats.action.block_user: Threat blocked by stopping the request. Additional requests by the client application will be automatically blocked for a duration of several minutes. Site owner is notified.\napi.threats.action.block_ip: Threat blocked by stopping the request. Additional requests from the same IP addresses will be automatically blocked for a duration of several minutes. Site owner is notified.\napi.threats.action.quarantine_url: Relevant only for Backdoor Protect. When detecting a backdoor, additional requests to the URL of the backdoor will be automatically blocked. Site owner is notified.",
                        "in": "formData",
                        "name": "security_rule_action",
                        "type": "string",
                        "enum":["api.threats.action.disabled","api.threats.action.alert","api.threats.action.block_request","api.threats.action.block_user","api.threats.action.block_ip","api.threats.action.quarantine_url"],
						"required": false
                    },
                    {
                    	"description":"Removes quarantined URLs from the backdoor protection list, as defined in the Cloud Security Console Website Settings > WAF Settings > Backdoor Protect.\n\nTo remove a URL from the backdoor protection list, use the following parameters with the specified values:\n\nquarantined_urls: <URL full path>\nrule_id: api.threats.backdoor\nsecurity_rule_action: api.threats.action.quarantine_url",
                        "in": "formData",
                        "name": "quarantined_urls",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Consider site to be under DDoS if the request rate is above this threshold. The valid values are 10, 20, 50, 100, 200, 500, 750, 1000, 2000, 3000, 4000, 5000.",
                        "in": "formData",
                        "name": "ddos_traffic_threshold",
                        "type": "integer",
                        "enum":[10, 20, 50, 100, 200, 500, 750, 1000, 2000, 3000, 4000, 5000],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "status": "pending_dns_changes",
                            "ips": [
                                "34.33.22.1"
                            ],
                            "dns": [
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "CNAME",
                                    "set_data_to": "x343.incapdns.net"
                                },
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "original_dns": [
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.11"
                                    ]
                                },
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.50"
                                    ]
                                }
                            ],
                            "warnings": [
                                {
                                    "type": "FTP",
                                    "dns_record_name": "ftp.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                },
                                {
                                    "type": "MAIL",
                                    "mail_record_name": "mail.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "security": {
                                "waf": {
                                    "rules": [
                                        {
                                            "id": "api.threats.bot_access_control",
                                            "name": "Bot Access Control",
                                            "block_bad_bots": true,
                                            "challenge_suspected_bots": true
                                        },
                                        {
                                            "id": "api.threats.sql_injection",
                                            "name": "SQL Injection",
                                            "action": "api.threats.action.block_request",
                                            "action_text": "Block Request"
                                        },
                                        {
                                            "id": "api.threats.cross_site_scripting",
                                            "name": "Cross Site Scripting (XSS)",
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/gsddg",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 244711494
                                                }
                                            ],
                                            "action": "api.threats.action.alert",
                                            "action_text": "Alert Only"
                                        },
                                        {
                                            "id": "api.threats.illegal_resource_access",
                                            "name": "Illegal Resource Access",
                                            "action": "api.threats.action.block_user",
                                            "action_text": "Block User"
                                        },
                                        {
                                            "id": "api.threats.ddos",
                                            "name": "DDoS",
                                            "activation_mode": "api.threats.ddos.activation_mode.off",
                                            "activation_mode_text": "Off",
                                            "ddos_traffic_threshold": "api.threats.ddos.ddos_trassic_threshold",
                                            "ddos_traffic_threshold_text": "750"
                                        },
                                        {
                                            "id": "api.threats.backdoor",
                                            "name": "Backdoor Protect",
                                            "action": "api.threats.action.quarantine_url",
                                            "action_text": "Auto-Quarantine"
                                        },
                                        {
                                            "action": "api.threats.action.block_ip",
                                            "action_text": "Block IP",
                                            "id": "api.threats.remote_file_inclusion",
                                            "name": "Remote File Inclusion"
                                        }
                                    ]
                                },
                                "acls": {
                                    "rules": [
                                        {
                                            "ips": [
                                                "2.3.4.5"
                                            ],
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/home",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 493271006
                                                }
                                            ],
                                            "id": "api.acl.blacklisted_ips",
                                            "name": "Visitors from blacklisted IPs"
                                        }
                                    ]
                                }
                            },
                            "active": "active",
                            "acceleration_level": "advanced",
                            "site_creation_date": 1372573842000,
                            "sealLocation": {
                                "id": "api.seal_location.bottom_right",
                                "name": "Bottom right"
                            },
                            "ssl": {
                                "origin_server": {
                                    "detected": true,
                                    "detectionStatus": "ok"
                                },
                                "generated_certificate": {
                                    "ca": "globalsign",
                                    "validation_method": "dns",
                                    "validation_data": [
                                        {
                                            "dns_record_name": "www.example.com",
                                            "set_type_to": "TXT",
                                            "set_data_to": "globalsign-domain-verification=rgwlWGF7wQsdWdhbd54pGGruzskFMVezwMvnUtRAzW"
                                        }
                                    ],
                                    "san": [
                                        "*.example.com",
                                        "example.com"
                                    ],
                                    "validation_status": "pending_user_action"
                                },
                                "custom_certificate": {
                                    "active": true,
                                    "expirationDate": 1460100446000,
                                    "revocationError": false,
                                    "validityError": false,
                                    "chainError": false,
                                    "hostnameMismatchError": true
                                }
                            },
                            "login_protect": {
                                "enabled": true,
                                "specific_users_list": [
                                    {
                                        "email": "john@example.com",
                                        "name": "John Doe",
                                        "status": "INVITATION_SENT"
                                    },
                                    {
                                        "email": "jane@example.com",
                                        "name": "Jane Doe",
                                        "status": "ACTIVATED"
                                    }
                                ],
                                "send_lp_notifications": true,
                                "allow_all_users": false,
                                "authentication_methods": [
                                    "sms",
                                    "ga"
                                ],
                                "urls": [
                                    "/wp-admin"
                                ],
                                "url_patterns": [
                                    "PREFIX"
                                ]
                            },
                            "performance_configuration": {
                                "advanced_caching_rules": {
                                    "never_cache_resources": [
                                        {
                                            "pattern": "SUFFIX",
                                            "url": "/test.html"
                                        }
                                    ],
                                    "always_cache_resources": [
                                        {
                                            "pattern": "NOT_EQUALS",
                                            "url": "/index.html",
                                            "ttl": 5,
                                            "ttlUnits": "SECONDS"
                                        },
                                        {
                                            "pattern": "EQUALS",
                                            "url": "/home.html",
                                            "ttl": 6,
                                            "ttlUnits": "DAYS"
                                        }
                                    ]
                                },
                                "acceleration_level": "advanced",
                                "async_validation": true,
                                "minify_javascript": true,
                                "minify_css": true,
                                "minify_static_html": true,
                                "compress_jpeg": true,
                                "progressive_image_rendering": true,
                                "aggressive_compression": true,
                                "compress_png": true,
                                "on_the_fly_compression": true,
                                "tcp_pre_pooling": true,
                                "comply_no_cache": true,
                                "comply_vary": true,
                                "use_shortest_caching": true,
                                "support_all_tls_versions": true,
                                "prefer_last_modified": true,
                                "disable_client_side_caching": true,
                                "cache_headers": [
                                    {
                                        "headerName": "Content-type: application/pdf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/configure/whitelists": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The id of the acl, e.g api.acl.blacklisted_ips:\r\n• api.acl.blacklisted_countries - Visitors from blacklisted countries/continents\r\n• api.acl.blacklisted_urls - Visitors from blacklisted URLs\r\n• api.acl.blacklisted_ips - Visitors from blacklisted IPs\r\n• api.acl.whitelisted_ips - Visitors from whitelisted IPs\n\r\n\rBlacklisted URLs Example:\r\nrule_id=api.acl.blacklisted_urls\r\nurls=%2Fadmin%2Fdashboard%2Fstats%3Fx%3D1%26y%3D2%23z%3D3,%2Fadmin\r\nurl_patterns=contains,equals\r\n\r\nBlacklisted Countries Example:\r\nrule_id=api.acl.blacklisted_countries\r\ncountries=CA,US\r\ncontinents=SA\r\n\r\nBlacklisted IPs Example:\r\nrule_id=api.acl.blacklisted_ips\r\nips=1.2.3.4,192.168.1.1-192.168.1.100,192.168.1.1/24\r\n\r\nWhitelisted IPs Example:\r\nrule_id=api.acl.whitelisted_ips\r\nips=1.2.3.4\r\n\r\nDelete the IPs ACL Example (send an empty list of IPs):\r\nrule_id=api.acl.blacklisted_ips\r\nips=\r\n",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
                        "enum":["api.acl.blacklisted_countries","api.acl.blacklisted_ips","api.acl.blacklisted_urls","api.acl.whitelisted_ips","api.threats.backdoor","api.threats.bot_access_control","api.threats.cross_site_scripting","api.threats.ddos","api.threats.illegal_resource_access","api.threats.remote_file_inclusion","api.threats.sql_injection"],
						"required": true
                    },
                    {
                    	"description":"The id (an integer) of the whitelist to be set. This field is optional - in case no id is supplied, a new whitelist will be created.",
                        "in": "formData",
                        "name": "whitelist_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"An optional boolean parameter. If it is set to \"true\" and a whitelist id is sent, the whitelist will be deleted.",
                        "in": "formData",
                        "name": "delete_whitelist",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"A comma separated list of resource paths.\n\nFor example, /home and /admin/index.html are resource paths, while http://www.example.com/home is not. ",
                        "in": "formData",
                        "name": "urls",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"A comma separated list of country codes.",
                        "in": "formData",
                        "name": "countries",
                        "type": "string",
                        "uniqueItems":false,
                        "enum":["AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW"],
						"required": false
                    },
                    {
                    	"description":"A comma separated list of continent codes.",
                        "in": "formData",
                        "name": "continents",
                        "type": "string",
                        "uniqueItems":false,
                        "enum":["AF","AN","AS","EU","NA","OC","SA"],
						"required": false
                    },
                    {
                    	"description":"A comma seperated list of IPs or IP ranges, e.g: 192.168.1.1, 192.168.1.1-192.168.1.100 or 192.168.1.1/24",
                        "in": "formData",
                        "name": "ips",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"A comma separated list of client application types,",
                        "in": "formData",
                        "name": "client_app_types",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"A comma separated list of client application IDs.",
                        "in": "formData",
                        "name": "client_apps",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"A comma separated list of encoded parameters.",
                        "in": "formData",
                        "name": "parameters",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"A comma separated list of encoded user agents.",
                        "in": "formData",
                        "name": "user_agents",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/customCertificate/csr": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Email address. For example: \"joe@example.com\".",
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": false
                    },
                    {
                    	"description":"The legal name of your organization. This should not be abbreviated or include suffixes such as Inc., Corp., or LLC.",
                        "in": "formData",
                        "name": "organization",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The division of your organization handling the certificate. For example, \"IT Department\".",
                        "in": "formData",
                        "name": "organization_unit",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The two-letter ISO code for the country where your organization is located.",
                        "in": "formData",
                        "name": "country",
                        "type": "string",
                        "enum":["AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW"],
						"required": false
                    },
                    {
                    	"description":"The state/region where your organization is located. This should not be abbreviated.",
                        "in": "formData",
                        "name": "state",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The city where your organization is located.",
                        "in": "formData",
                        "name": "city",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "csr_content":"-----BEGIN CERTIFICATE REQUEST-----\nMIICyTCCAbECAQAwgYMxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhEZWxhd2FyZTEO...",
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/customCertificate/remove": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/customCertificate/upload": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The certificate file in base64 format.",
                        "in": "formData",
                        "name": "certificate",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The private key of the certificate in base64 format. Optional in case of PFX certificate file format.",
                        "in": "formData",
                        "name": "private_key",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The passphrase used to protect your SSL certificate.",
                        "in": "formData",
                        "name": "passphrase",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info":{
                                "details":{
                                    "active":true,
                                    "expirationDate":1460100446000,
                                    "revocationError":false,
                                    "validityError":false,
                                    "chainError":false,
                                    "coverageError":true
                                },
                                "id-info":"999999"
                            } 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/datacenter/origin-pop/modify": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The ID of the PoP that serves as an access point between Imperva and the customer’s origin server. For example: “lax”, for Los Angeles.",
                        "in": "formData",
                        "name": "origin_pop",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "status": "ok",
                            "datacenter_id": "484377"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/datacenter/origin-pop/recommend": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "pops":[
                                {
                                    "id":"ord",
                                    "name":"Chicago, IL",
                                    "region":"US Central",
                                    "rtt":1
                                },
                                {
                                    "id":"nyc",
                                    "name":"New York, NY",
                                    "region":"US East",
                                    "rtt":8
                                }
                            ],
                            "reason":"N/A",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The new data center's name.",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The server's address. Possible values: IP, CNAME",
                        "in": "formData",
                        "name": "server_address",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Enables the data center.",
                        "in": "formData",
                        "name": "is_enabled",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"The data center will be available for specific resources (Forward Delivery Rules).",
                        "in": "formData",
                        "name": "is_content",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Data center load balancing algorithm. Possible values are:\n\nLB_LEAST_PENDING_REQUESTS - Server with least pending requests\n\nLB_LEAST_OPEN_CONNECTIONS\n\nLB_SOURCE_IP_HASH - Server by IP hash\n\nRANDOM - Random server",
                        "in": "formData",
                        "name": "is_content",
                        "type": "string",
                        "enum":["LB_LEAST_PENDING_REQUESTS","LB_LEAST_OPEN_CONNECTIONS","LB_SOURCE_IP_HASH","RANDOM"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "status": "ok",
                            "datacenter_id": "484377"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"The data center's ID.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "status": "ok",
                            "datacenter_id": "484377"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/edit": {
            "post": {
                "parameters": [
                    {
                    	"description":"The data center's ID.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The new data center's name.",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Enables the data center.",
                        "in": "formData",
                        "name": "is_enabled",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Defines the data center as standby for failover.",
                        "in": "formData",
                        "name": "is_standby",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"The data center will be available for specific resources (Forward Delivery Rules)",
                        "in": "formData",
                        "name": "is_content",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "status": "ok",
                            "datacenter_id": "484377"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/list": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":[
                            {
                                "isActive": true,
                                "id": "54313",
                                "enabled": "false",
                                "isStandBy": "false",
                                "servers": [
                                    {
                                        "id": "1034487",
                                        "enabled": "true",
                                        "address": "69.61.27.182"
                                    }
                                ],
                                "contentOnly": "true"
                            }
                        ]
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/resume": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },

        "/prov/v1/sites/dataCenters/servers/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"The data center's ID.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Server IP address.",
                        "in": "formData",
                        "name": "server_address",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Set the server as Active (P0) or Standby (P1) (Boolean).",
                        "in": "formData",
                        "name": "is_standby",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/servers/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"Server ID.",
                        "in": "formData",
                        "name": "server_id",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/dataCenters/servers/edit": {
            "post": {
                "parameters": [
                    {
                    	"description":"Server ID.",
                        "in": "formData",
                        "name": "server_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The IP address of the server to modify.",
                        "in": "formData",
                        "name": "server_address",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Enable or disable the server (Boolean).",
                        "in": "formData",
                        "name": "is_enabled",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Set the server as Active (P0) or Standby (P1) (Boolean).",
                        "in": "formData",
                        "name": "is_standby",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/hostname/purge": {
            "post": {
                "parameters": [
                    {
                    	"description":"The hostname to purge from the cache.",
                        "in": "formData",
                        "name": "host_name",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/htmlinjections": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "html_injections":[
                                {
                                    "url":"/",
                                    "url_pattern":"prefix",
                                    "location":"head",
                                    "content":"Some content"
                                }
                            ],
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/incapRules/list": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Whether or not delivery rules should be included. Defaults to \"Yes\".",
                        "in": "formData",
                        "name": "include_ad_rules",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Whether or not security rules be included. Defaults to \"Yes\".",
                        "in": "formData",
                        "name": "include_incap_rules",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
						"required": false
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "incap_rules_data": {
                                "All": [
                                    {
                                        "id": "3660",
                                        "last_7_days_requests_count": "0",
                                        "name": "Ortal",
                                        "action": "RULE_ACTION_ALERT",
                                        "filter": ""
                                    }
                                ]
                            },
                            "ad_rules_data": {
                                "Redirect": [
                                    {
                                        "to": "/home.php",
                                        "id": "3648",
                                        "priority": "1",
                                        "last_7_days_requests_count": "0",
                                        "name": "Test new",
                                        "action": "RULE_ACTION_REWRITE_URL",
                                        "from": "*/home.html",
                                        "filter": "ASN == 1"
                                    }
                                ],
                                "Forward": [
                                    {
                                        "id": "3628",
                                        "priority": "2",
                                        "last_7_days_requests_count": "0",
                                        "name": "move to rewrite",
                                        "dc_id": "54313",
                                        "action": "RULE_ACTION_FORWARD_TO_DC",
                                        "filter": ""
                                    }
                                ]
                            },
                            "rate_rules": {
                                "Rates": [
                                    {
                                        "id": "4723",
                                        "enabled": "true",
                                        "interval": "120",
                                        "name": "Test Rate IP",
                                        "context": "IP",
                                        "action": "RULE_ACTION_RATE",
                                        "internal_name": "test-rate-ip",
                                        "filter": " ASN == 2"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/incapRules/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Rule name.",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Possible action parameter values for security rules:\n\nRULE_ACTION_REDIRECT: Redirect the client to a different URL, responding with a 30X response.\n\nRULE_ACTION_SIMPLIFIED_REDIRECT: Redirect the client to a different URL, responding with a 30X response. For more details, see Create Simplified Redirect Rules.\n\nRULE_ACTION_REWRITE_URL: Modify the path to which a specific request is targeted.\n\nRULE_ACTION_REWRITE_HEADER: Modify or add a request header before passing traffic to the origin server.\n\nRULE_ACTION_REWRITE_COOKIE: Modify or add cookies that are sent by the client to the origin server. The cookie name and value should be indicated.\n\nRULE_ACTION_DELETE_HEADER: Remove a specific request header, which means that it won’t be sent to the origin server.\n\nRULE_ACTION_DELETE_COOKIE: Remove a specific cookie set on the client, which means that it won’t be sent to the origin server.\n\nRULE_ACTION_FORWARD_TO_DC: Define the data center to which a specific request will be sent.\n\nRULE_ACTION_FORWARD_TO_PORT: Define the port to which a specific request will be sent.\n\nRULE_ACTION_RESPONSE_REWRITE_HEADER: Modify or add a header to the response received from the origin server.\n\nRULE_ACTION_RESPONSE_DELETE_HEADER: Remove a specific response header, which means that it won't be returned to the client.\n\nRULE_ACTION_RESPONSE_REWRITE_RESPONSE_CODE: Modify the response code received from the origin server\n\n\n\nPossible action parameter values for counter (rate) rules:\n\nRULE_ACTION_ALERT: Generate a non blocking alert for this event.\n\nRULE_ACTION_BLOCK: Block the current request and generate an alert for this event.\n\nRULE_ACTION_BLOCK_USER: Block the current session and generate an alert for this event. Any subsequent request from the same Session will be blocked.\n\nRULE_ACTION_BLOCK_IP: Block the current IP and generate an alert for this event. Any subsequent request from the same IP will be blocked for a period of 10 minutes.\n\nRULE_ACTION_RETRY: Require any client matching the rule filters to support cookies in order to complete the request.\n\nRULE_ACTION_INTRUSIVE_HTML: Require any client matching the rule filters to support javascript in order to complete the request. Since the Javascript test is embedded in an HTML page, this action should only be enabled for HTML resources.\n\nRULE_ACTION_CAPTCHA: Require any client matching the rule filters to pass a CAPTCHA test in order to complete the request. Since the CAPTCHA test is embedded in an HTML page, this action should only be enabled for HTML resources.\n\n\nPossible action parameter values for counter (rate) rules:\n\nRULE_ACTION_RATE: Count the number of requests received that match the rule filter.",
                        "in": "formData",
                        "name": "action",
                        "type": "string",
                        "enum": [
                            "RULE_ACTION_REDIRECT",
                            "RULE_ACTION_SIMPLIFIED_REDIRECT",
                            "RULE_ACTION_REWRITE_URL",
                            "RULE_ACTION_REWRITE_HEADER",
                            "RULE_ACTION_REWRITE_COOKIE",
                            "RULE_ACTION_DELETE_HEADER",
                            "RULE_ACTION_DELETE_COOKIE",
                            "RULE_ACTION_FORWARD_TO_DC",
                            "RULE_ACTION_FORWARD_TO_PORT",
                            "RULE_ACTION_RESPONSE_REWRITE_HEADER",
                            "RULE_ACTION_RESPONSE_DELETE_HEADER",
                            "RULE_ACTION_RESPONSE_REWRITE_RESPONSE_CODE",
                            "RULE_ACTION_ALERT",
                            "RULE_ACTION_BLOCK",
                            "RULE_ACTION_BLOCK_USER",
                            "RULE_ACTION_BLOCK_IP",
                            "RULE_ACTION_RETRY",
                            "RULE_ACTION_INTRUSIVE_HTML",
                            "RULE_ACTION_CAPTCHA",
                            "RULE_ACTION_RATE"
                        ],
						"required": false
                    },
                    {
                    	"description":"Rule will trigger only a request that matches this filter. Example Operators:\n\n== (equal to):  == \"<your string>\"\n\n!= (not equal to):  != \"<your string>\"\n\nContains: contains \"<your string>\"\n\nDoes not contain: not-contains \"<your string>\"\n\nStarts with: contains \"^<your string>\"  For example: contains \"^login\"\n\nEnds with: contains \"<your string>$\"  For example: contains \"login$\"\n\nDoes not start with: not-contains \"^<your string>\"\n\nDoes not end with: not-contains \"<your string>$\"\n\n\n\nReserved Characters: \n\n\n\" - Enclose values: URL == \"/admin\"\n\n& - Combine predicates with AND: URL == \"/admin\" & CountryCode == GB\n\n| - Combine two predicates with an OR logic: ClientIP == 192.168.1.1 & (URL == \"/admin\" | QueryString != \"s=search\")\n\n; - Create a list of values to match: URL == \"/admin\";\"/home\"\n\n\" - Used to escape reserved characters: QueryString != 's=\"search\"'\n\n() - Construct complex logic: A & B & (C | D) & F *\n\n\n\nAlso see https://docs.imperva.com/bundle/cloud-application-security/page/rules/rule-syntax.htm",
                        "in": "formData",
                        "name": "filter",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Redirect rule's response code. Valid values are 302, 301, 303, 307, 308.",
                        "in": "formData",
                        "name": "response_code",
                        "type": "integer",
                        "enum":[301, 302, 303, 307, 308],
                        "required": false
                    },
                    {
                    	"description":"Protocol",
                        "in": "formData",
                        "name": "protocol",
                        "type": "string",
                        "enum":["http","https"],
                        "required": false
                    },
                    {
                    	"description":"Add cookie or header if it doesn't exist (Rewrite cookie rule only)",
                        "in": "formData",
                        "name": "add_missing",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The pattern to rewrite.\n\nFor RULE_ACTION_REWRITE_URL - The URL to rewrite.\n\nFor RULE_ACTION_REWRITE_HEADER - The header value to rewrite.\n\nFor RULE_ACTION_REWRITE_COOKIE - The cookie value to rewrite.\n\nFor RULE_ACTION_SIMPLIFIED_REDIRECT - Follow guidelines in ",
                        "in": "formData",
                        "name": "from",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The pattern to change to.\n\nFor RULE_ACTION_REWRITE_URL - The URL to change to.\n\nFor RULE_ACTION_REWRITE_HEADER - The header value to change to.\n\nFor RULE_ACTION_REWRITE_COOKIE - The cookie value to change to.\n\nFor RULE_ACTION_SIMPLIFIED_REDIRECT - Follow guidelines in ",
                        "in": "formData",
                        "name": "to",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Name of cookie or header to rewrite. Applies only for RULE_ACTION_REWRITE_COOKIE and RULE_ACTION_REWRITE_HEADER",
                        "in": "formData",
                        "name": "rewrite_name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Data center to forward request to. Applies only for RULE_ACTION_FORWARD_TO_DC.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Context for port forwarding. \"Use Port Value\" or \"Use Header Name\". Applies only for RULE_ACTION_FORWARD_TO_PORT.",
                        "in": "formData",
                        "name": "port_forwarding_context",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Port number or header name for port forwarding. Applies only for RULE_ACTION_FORWARD_TO_PORT.",
                        "in": "formData",
                        "name": "port_forwarding_value",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The context of the rate counter. Possible values: IP / Session. Applies only to rules using RULE_ACTION_RATE.",
                        "in": "formData",
                        "name": "rate_context",
                        "type": "string",
                        "enum":["IP","Session"],
						"required": false
                    },
                    {
                    	"description":"The interval (in seconds) of the rate counter. Possible values: A multiple of 10 from 10-300. Applies only to rules using RULE_ACTION_RATE.",
                        "in": "formData",
                        "name": "rate_interval",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Apply the rule only to the IP address the API request was sent from.\n\nThis option is not available for Simplified Redirect rules.",
                        "in": "formData",
                        "name": "is_test_mode",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/incapRules/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"Rule ID.",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/incapRules/edit": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Rule ID.",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "integer",
						"required": true
                    },                    {
                    	"description":"Rule name.",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Possible action parameter values for security rules:\n\nRULE_ACTION_REDIRECT: Redirect the client to a different URL, responding with a 30X response.\n\nRULE_ACTION_SIMPLIFIED_REDIRECT: Redirect the client to a different URL, responding with a 30X response. For more details, see Create Simplified Redirect Rules.\n\nRULE_ACTION_REWRITE_URL: Modify the path to which a specific request is targeted.\n\nRULE_ACTION_REWRITE_HEADER: Modify or add a request header before passing traffic to the origin server.\n\nRULE_ACTION_REWRITE_COOKIE: Modify or add cookies that are sent by the client to the origin server. The cookie name and value should be indicated.\n\nRULE_ACTION_DELETE_HEADER: Remove a specific request header, which means that it won’t be sent to the origin server.\n\nRULE_ACTION_DELETE_COOKIE: Remove a specific cookie set on the client, which means that it won’t be sent to the origin server.\n\nRULE_ACTION_FORWARD_TO_DC: Define the data center to which a specific request will be sent.\n\nRULE_ACTION_FORWARD_TO_PORT: Define the port to which a specific request will be sent.\n\nRULE_ACTION_RESPONSE_REWRITE_HEADER: Modify or add a header to the response received from the origin server.\n\nRULE_ACTION_RESPONSE_DELETE_HEADER: Remove a specific response header, which means that it won't be returned to the client.\n\nRULE_ACTION_RESPONSE_REWRITE_RESPONSE_CODE: Modify the response code received from the origin server\n\n\n\nPossible action parameter values for counter (rate) rules:\n\nRULE_ACTION_ALERT: Generate a non blocking alert for this event.\n\nRULE_ACTION_BLOCK: Block the current request and generate an alert for this event.\n\nRULE_ACTION_BLOCK_USER: Block the current session and generate an alert for this event. Any subsequent request from the same Session will be blocked.\n\nRULE_ACTION_BLOCK_IP: Block the current IP and generate an alert for this event. Any subsequent request from the same IP will be blocked for a period of 10 minutes.\n\nRULE_ACTION_RETRY: Require any client matching the rule filters to support cookies in order to complete the request.\n\nRULE_ACTION_INTRUSIVE_HTML: Require any client matching the rule filters to support javascript in order to complete the request. Since the Javascript test is embedded in an HTML page, this action should only be enabled for HTML resources.\n\nRULE_ACTION_CAPTCHA: Require any client matching the rule filters to pass a CAPTCHA test in order to complete the request. Since the CAPTCHA test is embedded in an HTML page, this action should only be enabled for HTML resources.\n\n\nPossible action parameter values for counter (rate) rules:\n\nRULE_ACTION_RATE: Count the number of requests received that match the rule filter.",
                        "in": "formData",
                        "name": "action",
                        "type": "string",
                        "enum": [
                            "RULE_ACTION_REDIRECT",
                            "RULE_ACTION_SIMPLIFIED_REDIRECT",
                            "RULE_ACTION_REWRITE_URL",
                            "RULE_ACTION_REWRITE_HEADER",
                            "RULE_ACTION_REWRITE_COOKIE",
                            "RULE_ACTION_DELETE_HEADER",
                            "RULE_ACTION_DELETE_COOKIE",
                            "RULE_ACTION_FORWARD_TO_DC",
                            "RULE_ACTION_FORWARD_TO_PORT",
                            "RULE_ACTION_RESPONSE_REWRITE_HEADER",
                            "RULE_ACTION_RESPONSE_DELETE_HEADER",
                            "RULE_ACTION_RESPONSE_REWRITE_RESPONSE_CODE",
                            "RULE_ACTION_ALERT",
                            "RULE_ACTION_BLOCK",
                            "RULE_ACTION_BLOCK_USER",
                            "RULE_ACTION_BLOCK_IP",
                            "RULE_ACTION_RETRY",
                            "RULE_ACTION_INTRUSIVE_HTML",
                            "RULE_ACTION_CAPTCHA",
                            "RULE_ACTION_RATE"
                        ],
						"required": false
                    },
                    {
                    	"description":"Rule will trigger only a request that matches this filter. Example Operators:\n\n== (equal to):  == \"<your string>\"\n\n!= (not equal to):  != \"<your string>\"\n\nContains: contains \"<your string>\"\n\nDoes not contain: not-contains \"<your string>\"\n\nStarts with: contains \"^<your string>\"  For example: contains \"^login\"\n\nEnds with: contains \"<your string>$\"  For example: contains \"login$\"\n\nDoes not start with: not-contains \"^<your string>\"\n\nDoes not end with: not-contains \"<your string>$\"\n\n\n\nReserved Characters: \n\n\n\" - Enclose values: URL == \"/admin\"\n\n& - Combine predicates with AND: URL == \"/admin\" & CountryCode == GB\n\n| - Combine two predicates with an OR logic: ClientIP == 192.168.1.1 & (URL == \"/admin\" | QueryString != \"s=search\")\n\n; - Create a list of values to match: URL == \"/admin\";\"/home\"\n\n\" - Used to escape reserved characters: QueryString != 's=\"search\"'\n\n() - Construct complex logic: A & B & (C | D) & F *\n\n\n\nAlso see https://docs.imperva.com/bundle/cloud-application-security/page/rules/rule-syntax.htm",
                        "in": "formData",
                        "name": "filter",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Redirect rule's response code. Valid values are 302, 301, 303, 307, 308.",
                        "in": "formData",
                        "name": "response_code",
                        "type": "integer",
                        "enum":[301, 302, 303, 307, 308],
                        "required": false
                    },
                    {
                    	"description":"Protocol",
                        "in": "formData",
                        "name": "protocol",
                        "type": "string",
                        "enum":["http","https"],
                        "required": false
                    },
                    {
                    	"description":"Add cookie or header if it doesn't exist (Rewrite cookie rule only)",
                        "in": "formData",
                        "name": "add_missing",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The pattern to rewrite.\n\nFor RULE_ACTION_REWRITE_URL - The URL to rewrite.\n\nFor RULE_ACTION_REWRITE_HEADER - The header value to rewrite.\n\nFor RULE_ACTION_REWRITE_COOKIE - The cookie value to rewrite.\n\nFor RULE_ACTION_SIMPLIFIED_REDIRECT - Follow guidelines in ",
                        "in": "formData",
                        "name": "from",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The pattern to change to.\n\nFor RULE_ACTION_REWRITE_URL - The URL to change to.\n\nFor RULE_ACTION_REWRITE_HEADER - The header value to change to.\n\nFor RULE_ACTION_REWRITE_COOKIE - The cookie value to change to.\n\nFor RULE_ACTION_SIMPLIFIED_REDIRECT - Follow guidelines in ",
                        "in": "formData",
                        "name": "to",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Name of cookie or header to rewrite. Applies only for RULE_ACTION_REWRITE_COOKIE and RULE_ACTION_REWRITE_HEADER",
                        "in": "formData",
                        "name": "rewrite_name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Data center to forward request to. Applies only for RULE_ACTION_FORWARD_TO_DC.",
                        "in": "formData",
                        "name": "dc_id",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Context for port forwarding. \"Use Port Value\" or \"Use Header Name\". Applies only for RULE_ACTION_FORWARD_TO_PORT.",
                        "in": "formData",
                        "name": "port_forwarding_context",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Port number or header name for port forwarding. Applies only for RULE_ACTION_FORWARD_TO_PORT.",
                        "in": "formData",
                        "name": "port_forwarding_value",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The context of the rate counter. Possible values: IP / Session. Applies only to rules using RULE_ACTION_RATE.",
                        "in": "formData",
                        "name": "rate_context",
                        "type": "string",
                        "enum":["IP","Session"],
						"required": false
                    },
                    {
                    	"description":"The interval (in seconds) of the rate counter. Possible values: A multiple of 10 from 10-300. Applies only to rules using RULE_ACTION_RATE.",
                        "in": "formData",
                        "name": "rate_interval",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Apply the rule only to the IP address the API request was sent from.\n\nThis option is not available for Simplified Redirect rules.",
                        "in": "formData",
                        "name": "is_test_mode",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/incapRules/enableDisable": {
            "post": {
                "parameters": [
                    {
                    	"description":"Rule ID.",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"When true, the rule will be enabled. Set to false to disable.",
                        "in": "formData",
                        "name": "enable",
                        "type": "boolean",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/incapRules/priority/set": {
            "post": {
                "parameters": [
                    {
                    	"description":"Rule ID.",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"New priority for the selected rule.",
                        "in": "formData",
                        "name": "priority",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/list": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.\n\nIf the account has sub accounts, the operation returns results for the sites in the account and in all of its sub accounts.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
						"required": false
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "sites": 
                            [
                                "{Same as Get Site Status}",
                                "{Same as Get Site Status}"
                            ],
                            "debug_info": {}
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/moveSite": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The numeric identifier of the account which the site will be moved to. ",
                        "in": "formData",
                        "name": "destination_account_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":
                        {
                            "dnsInstructions": [
                                {
                                    "aRecords": [],
                                    "aaaaRecords": [],
                                    "dnsComment": ""
                                }
                            ],
                            "status": "",
                            "sslInstructions": [
                                {
                                    "recordName": "",
                                    "recordType": "",
                                    "recordValue": "",
                                    "sslComment": ""
                                }
                            ],
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": ""
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/advanced": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Name of configuration parameter to set.\n\naggressive_compression: Sets the Aggressive compression rendering flag. Pass \"true\" or \"false\" in the value parameter.\n\nasync_validation: Sets Async validation. Pass \"true\" or \"false\" in the value parameter.\n\ncache_300x: Cache 300X responses. Pass \"true\" or \"false\" in the value parameter.\n\ncache_empty_responses: Cache responses that don’t have a message body.\n\ncache_http_10_responses: Cache HTTP 1.0 type responses that don’t include the Content-Length header or chunking. Pass \"true\" or \"false\" in the value parameter.\n\ncomply_no_cache: Comply with no-cache and max-age directives in client requests. Pass \"true\" or \"false\" in the value parameter.\n\ncomply_vary: Comply with the Vary header. Pass \"true\" or \"false\" in the value parameter.\n\ncompress_jpeg: Sets the Compress JPEG. Pass \"true\" or \"false\" in the value parameter.\n\ncompress_png: Sets the Compress PNG flag. Pass \"true\" or \"false\" in the value parameter.\n\ndisable_client_side_caching: Disable client side caching. Pass \"true\" or \"false\" in the value parameter.\n\nEnables supporting browsers to take advantage of the performance enhancements provided by HTTP/2 for your website. Non-supporting browsers can connect via HTTP/1.0 or HTTP/1.1. HTTP/2 support requires that SSL is configured for your website. Pass \"true\" or \"false\" in the value parameter\n\nhttp_2: \n\nminify_css: Sets the Minify CSS. Pass \"true\" or \"false\" in the value parameter\n\nminify_javascript: Sets the Minify JS. Pass \"true\" or \"false\" in the value parameter.\n\nminify_static_html: Sets Minify static HTML. Pass \"true\" or \"false\" in the value parameter\n\non_the_fly_compression: \"On the fly\" Compression. Pass \"true\" or \"false\" in the value parameter.\n\norigin_connection_reuse: By default, TCP connections that are opened for a client request remain open for a short time to handle additional requests that may arrive. This option disables that behavior.. Pass \"true\" or \"false\" in the value parameter.\n\nprefer_last_modified: Prefer 'last modified' over eTag. Pass \"true\" or \"false\" in the value parameter.\n\nprogressive_image_rendering: Sets the Progressive Image rendering flag. Pass \"true\" or \"false\" in the value parameter.\n\nredirect_http_to_https: Redirect HTTP requests to HTTPS requests by sending an HTTP 301 response.\n\nredirect_naked_domain_to_full: Redirect requests from your website's naked domain to its full domain by sending and HTTP 301 response.\n\nsend_age_header: Send Cache-Control: max-age and Age headers. Pass \"true\" or \"false\" in the value parameter.\n\nsupport_non_sni_clients: By default, non-SNI clients are supported. Disable this option to block non-SNI clients. Pass \"true\" or \"false\" in the value parameter.\n\ntcp_pre_pooling: TCP Pre-Pooling. Pass \"true\" or \"false\" in the value parameter.\n\nunite_naked_full_cache: Use the same cache for full and naked domains. For example, use the same cached resource for www.example.com/a and example.com/a.\n\nuse_shortest_caching: Use shortest caching duration in case of conflicts. Pass \"true\" or \"false\" in the value parameter.\n\n",
                        "in": "formData",
                        "name": "param",
                        "type": "string",
                        "enum":["aggressive_compression","async_validation","cache_300x","cache_empty_responses","cache_http_10_responses","comply_no_cache","comply_vary","compress_jpeg","compress_png","disable_client_side_caching","http_2","minify_css","minify_javascript","minify_static_html","on_the_fly_compression","origin_connection_reuse","prefer_last_modified","progressive_image_rendering","redirect_http_to_https","redirect_naked_domain_to_full","send_age_header","support_non_sni_clients","tcp_pre_pooling","unite_naked_full_cache","use_shortest_caching",""],
						"required": false
                    },
                    {
                    	"description":"Name of configuration parameter to set.\n\naggressive_compression: Sets the Aggressive compression rendering flag. Pass \"true\" or \"false\" in the value parameter.\n\nasync_validation: Sets Async validation. Pass \"true\" or \"false\" in the value parameter.\n\ncache_300x: Cache 300X responses. Pass \"true\" or \"false\" in the value parameter.\n\ncache_empty_responses: Cache responses that don’t have a message body.\n\ncache_http_10_responses: Cache HTTP 1.0 type responses that don’t include the Content-Length header or chunking. Pass \"true\" or \"false\" in the value parameter.\n\ncomply_no_cache: Comply with no-cache and max-age directives in client requests. Pass \"true\" or \"false\" in the value parameter.\n\ncomply_vary: Comply with the Vary header. Pass \"true\" or \"false\" in the value parameter.\n\ncompress_jpeg: Sets the Compress JPEG. Pass \"true\" or \"false\" in the value parameter.\n\ncompress_png: Sets the Compress PNG flag. Pass \"true\" or \"false\" in the value parameter.\n\ndisable_client_side_caching: Disable client side caching. Pass \"true\" or \"false\" in the value parameter.\n\nEnables supporting browsers to take advantage of the performance enhancements provided by HTTP/2 for your website. Non-supporting browsers can connect via HTTP/1.0 or HTTP/1.1. HTTP/2 support requires that SSL is configured for your website. Pass \"true\" or \"false\" in the value parameter\n\nhttp_2: \n\nminify_css: Sets the Minify CSS. Pass \"true\" or \"false\" in the value parameter\n\nminify_javascript: Sets the Minify JS. Pass \"true\" or \"false\" in the value parameter.\n\nminify_static_html: Sets Minify static HTML. Pass \"true\" or \"false\" in the value parameter\n\non_the_fly_compression: \"On the fly\" Compression. Pass \"true\" or \"false\" in the value parameter.\n\norigin_connection_reuse: By default, TCP connections that are opened for a client request remain open for a short time to handle additional requests that may arrive. This option disables that behavior.. Pass \"true\" or \"false\" in the value parameter.\n\nprefer_last_modified: Prefer 'last modified' over eTag. Pass \"true\" or \"false\" in the value parameter.\n\nprogressive_image_rendering: Sets the Progressive Image rendering flag. Pass \"true\" or \"false\" in the value parameter.\n\nredirect_http_to_https: Redirect HTTP requests to HTTPS requests by sending an HTTP 301 response.\n\nredirect_naked_domain_to_full: Redirect requests from your website's naked domain to its full domain by sending and HTTP 301 response.\n\nsend_age_header: Send Cache-Control: max-age and Age headers. Pass \"true\" or \"false\" in the value parameter.\n\nsupport_non_sni_clients: By default, non-SNI clients are supported. Disable this option to block non-SNI clients. Pass \"true\" or \"false\" in the value parameter.\n\ntcp_pre_pooling: TCP Pre-Pooling. Pass \"true\" or \"false\" in the value parameter.\n\nunite_naked_full_cache: Use the same cache for full and naked domains. For example, use the same cached resource for www.example.com/a and example.com/a.\n\nuse_shortest_caching: Use shortest caching duration in case of conflicts. Pass \"true\" or \"false\" in the value parameter.\n\n",
                        "in": "formData",
                        "name": "value",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/cache-shield": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "enabled": true,
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "13017"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/cache-shield/enable": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Use true to enable cache shield on the specified site, and false to disable it.",
                        "in": "formData",
                        "name": "enable",
                        "type": "boolean",
						"required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/cache404/modify": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Pass 'true' to cache 404 responses, 'false' to disable the option.",
                        "in": "formData",
                        "name": "enable",
                        "type": "boolean",
						"required": true
                    },
                    {
                    	"description":"A positive number representing the amount of time to cache 404 responses. Default value: 10",
                        "in": "formData",
                        "name": "time",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Unit of time for caching 404 responses. One of MINUTES, HOURS, DAYS, WEEKS. Default value: HOURS",
                        "in": "formData",
                        "name": "time_unit",
                        "type": "string",
                        "enum":["HOURS","HOURS","DAYS","WEEKS"],
						"required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/cache404": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    } 
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "enabled": true,
                            "time": 10,
                            "time_unit": "HOURS",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/cache-mode": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Possible values:\n\ndisable\ncustom_cache_rules_only\nstatic_only\nstatic_and_dynamic\naggressive\n\nDefault value: static_only.",
                        "in": "formData",
                        "name": "cache_mode",
                        "type": "string",
                        "enum": ["disable","custom_cache_rules_only","static_only","static_and_dynamic","aggressive"],
						"required": true
                    },
                    {
                    	"description":"Profile dynamic pages and cache duration. Pass a number followed by '_' and one of: hr | min | sec | days | weeks.",
                        "in": "formData",
                        "name": "dynamic_cache_duration",
                        "type": "string",
                        "enum":["hr","min","sec","days","weeks"],
						"required": false
                    },
                    {
                    	"description":"Cache resource duration. Pass a number followed by '_' and one of: hr | min | sec | days | weeks",
                        "in": "formData",
                        "name": "aggressive_cache_duration",
                        "type": "string",
                        "enum":["hr","min","sec","days","weeks"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/cache-mode/get": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "cache_mode":"static_and_dynamic",
                            "res":0,
                            "res_message":"OK",
                            "debug_info":{
                                "id-info":"999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/caching-rules": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Comma separated list of always cache resources urls. \n\nExample: /url1,/some/url2",
                        "in": "formData",
                        "name": "always_cache_resource_url",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Comma separated list of always cache resources pattern. One of: contains | equals | prefix | suffix | not_equals | not_contains | not_prefix | not_suffix. \n\nExample: prefix,contains",
                        "in": "formData",
                        "name": "always_cache_resource_pattern",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Duration that resources will be in cache, pass number followed by '_' and one of: hr | min | sec | days | weeks.\n\nEither provide a comma separated list of duration expressions, matching the number of always cache rules, or a single duration expression to be used for all always cache rules.",
                        "in": "formData",
                        "name": "always_cache_resource_duration",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Comma separated list of never cache resources url. \n\nExample: /url1,/some/url2",
                        "in": "formData",
                        "name": "never_cache_resource_url",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Comma separated list of never cache resources pattern. One of: contains | equals | prefix | suffix | not_equals | not_contains | not_prefix | not_suffix. \n\nExample: prefix,contains",
                        "in": "formData",
                        "name": "never_cahce_resource_pattern",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Comma separated list of cached headers.",
                        "in": "formData",
                        "name": "cache_headers",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"An optional boolean parameter. If set to \"true\", the site's always cache rules will be cleared.",
                        "in": "formData",
                        "name": "clear_always_cache_rules",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"An optional boolean parameter. If set to \"true\", the site's always cache rules will be cleared.",
                        "in": "formData",
                        "name": "clear_never_cache_rules",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"An optional boolean parameter. If set to \"true\", the site's cache header rules will be cleared.",
                        "in": "formData",
                        "name": "clear_cache_headers_rules",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/caching-rules/add": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Rule name.",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Rule action.\n\nHTTP_CACHE_MAKE_STATIC: Cache Resource\n\nHTTP_CACHE_CLIENT_CACHE_CTL: Cache Resource on Client\n\nHTTP_CACHE_FORCE_UNCACHEABLE: Don't Cache Resource\n\nHTTP_CACHE_DIFFERENTIATE_SSL: Differentiate Cache Key by HTTP/HTTPS Scheme\n\nHTTP_CACHE_DIFFERENTIATE_BY_HEADER: Differentiate Cache Key by Header\n\nHTTP_CACHE_DIFFERENTIATE_BY_COOKIE: Differentiate Cache Key by Cookie\n\nHTTP_CACHE_IGNORE_PARAMS: Ignore Paramteres in Cache Key\n\nHTTP_CACHE_IGNORE_AUTH_HEADER: CacheRuleAction.HTTP_CACHE_IGNORE_AUTH_HEADER\n\nHTTP_CACHE_FORCE_VALIDATION: Force User Authentication\n\nHTTP_CACHE_ADD_TAG: Create Tag\n\nHTTP_CACHE_ENRICH_CACHE_KEY: Enrich Cache Key",
                        "in": "formData",
                        "name": "action",
                        "type": "string",
                        "enum":["HTTP_CACHE_MAKE_STATIC","HTTP_CACHE_CLIENT_CACHE_CTL","HTTP_CACHE_FORCE_UNCACHEABLE","HTTP_CACHE_DIFFERENTIATE_SSL","HTTP_CACHE_DIFFERENTIATE_BY_HEADER","HTTP_CACHE_DIFFERENTIATE_BY_COOKIE","HTTP_CACHE_IGNORE_PARAMS","HTTP_CACHE_IGNORE_AUTH_HEADER","HTTP_CACHE_FORCE_VALIDATION","HTTP_CACHE_ADD_TAG","HTTP_CACHE_ENRICH_CACHE_KEY"],
						"required": true
                    },
                    {
                    	"description":"Rule will trigger only a request that matches this filter. Example Operators:\n\n== (equal to):  == \"<your string>\"\n\n!= (not equal to):  != \"<your string>\"\n\nContains: contains \"<your string>\"\n\nDoes not contain: not-contains \"<your string>\"\n\nStarts with: contains \"^<your string>\"  For example: contains \"^login\"\n\nEnds with: contains \"<your string>$\"  For example: contains \"login$\"\n\nDoes not start with: not-contains \"^<your string>\"\n\nDoes not end with: not-contains \"<your string>$\"\n\n\n\nReserved Characters: \n\n\n\" - Enclose values: URL == \"/admin\"\n\n& - Combine predicates with AND: URL == \"/admin\" & CountryCode == GB\n\n| - Combine two predicates with an OR logic: ClientIP == 192.168.1.1 & (URL == \"/admin\" | QueryString != \"s=search\")\n\n; - Create a list of values to match: URL == \"/admin\";\"/home\"\n\n\" - Used to escape reserved characters: QueryString != 's=\"search\"'\n\n() - Construct complex logic: A & B & (C | D) & F *\n\n\n\nAlso see https://docs.imperva.com/bundle/cloud-application-security/page/rules/rule-syntax.htm",
                        "in": "formData",
                        "name": "filter",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Rule TTL. Only relevant when action is HTTP_CACHE_MAKE_STATIC or HTTP_CACHE_CLIENT_CACHE_CTL",
                        "in": "formData",
                        "name": "ttl",
                        "type": "string",
                        "enum":["HTTP_CACHE_MAKE_STATIC","HTTP_CACHE_CLIENT_CACHE_CTL"],
						"required": false
                    },
                    {
                    	"description":"Rule TTL time unit.\n\nMust be one of SECONDS, MINUTES, HOURS, DAYS or WEEKS. If no time unit is provided, SECONDS is used.\n\nOnly relevant when action is HTTP_CACHE_MAKE_STATIC or HTTP_CACHE_CLIENT_CACHE_CTL",
                        "in": "formData",
                        "name": "ttl_unit",
                        "type": "string",
                        "enum":["SECONDS","MINUTES","HOURS","DAYS","WEEKS"],
						"required": false
                    },
                    {
                    	"description":"Value to differentiate by. HTTP_CACHE_DIFFERENTIATE_BY_HEADER - header name, HTTP_CACHE_DIFFERENTIATE_BY_COOKIE - cookie name, HTTP_CACHE_DIFFERENTIATE_BY_GEO - geo location (ISO 3166-1 alpha-2 country codes ), otherwise irrelevant.",
                        "in": "formData",
                        "name": "differentiated_by_value",
                        "type": "string",
                        "enum":["HTTP_CACHE_DIFFERENTIATE_BY_HEADER","HTTP_CACHE_DIFFERENTIATE_BY_COOKIE","HTTP_CACHE_DIFFERENTIATE_BY_GEO"],
						"required": false
                    },
                    {
                    	"description":"Comma separated list of parameters to ignore.",
                        "in": "formData",
                        "name": "params",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"When set to true: all parameters in cache key will be ignored.\n\nDefault: false.\n\nRelevant for HTTP_CACHE_IGNORE_PARAMS action",
                        "in": "formData",
                        "name": "all_params",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"The name of the tag to add.",
                        "in": "formData",
                        "name": "tag_name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Add text to the cache key as suffix. Relevant for the HTTP_CACHE_ENRICH_CACHE_KEY action",
                        "in": "formData",
                        "name": "text",
                        "type": "string",
						"required": false
                    } 
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/caching-rules/edit": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"ID of the rule to change.",
                        "in": "formData",
                        "name": "rule_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Rule name.",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"Rule action.\n\nHTTP_CACHE_MAKE_STATIC: Cache Resource\n\nHTTP_CACHE_CLIENT_CACHE_CTL: Cache Resource on Client\n\nHTTP_CACHE_FORCE_UNCACHEABLE: Don't Cache Resource\n\nHTTP_CACHE_DIFFERENTIATE_SSL: Differentiate Cache Key by HTTP/HTTPS Scheme\n\nHTTP_CACHE_DIFFERENTIATE_BY_HEADER: Differentiate Cache Key by Header\n\nHTTP_CACHE_DIFFERENTIATE_BY_COOKIE: Differentiate Cache Key by Cookie\n\nHTTP_CACHE_IGNORE_PARAMS: Ignore Paramteres in Cache Key\n\nHTTP_CACHE_IGNORE_AUTH_HEADER: CacheRuleAction.HTTP_CACHE_IGNORE_AUTH_HEADER\n\nHTTP_CACHE_FORCE_VALIDATION: Force User Authentication\n\nHTTP_CACHE_ADD_TAG: Create Tag\n\nHTTP_CACHE_ENRICH_CACHE_KEY: Enrich Cache Key",
                        "in": "formData",
                        "name": "action",
                        "type": "string",
                        "enum":["HTTP_CACHE_MAKE_STATIC","HTTP_CACHE_CLIENT_CACHE_CTL","HTTP_CACHE_FORCE_UNCACHEABLE","HTTP_CACHE_DIFFERENTIATE_SSL","HTTP_CACHE_DIFFERENTIATE_BY_HEADER","HTTP_CACHE_DIFFERENTIATE_BY_COOKIE","HTTP_CACHE_IGNORE_PARAMS","HTTP_CACHE_IGNORE_AUTH_HEADER","HTTP_CACHE_FORCE_VALIDATION","HTTP_CACHE_ADD_TAG","HTTP_CACHE_ENRICH_CACHE_KEY"],
						"required": true
                    },
                    {
                    	"description":"Rule will trigger only a request that matches this filter. Example Operators:\n\n== (equal to):  == \"<your string>\"\n\n!= (not equal to):  != \"<your string>\"\n\nContains: contains \"<your string>\"\n\nDoes not contain: not-contains \"<your string>\"\n\nStarts with: contains \"^<your string>\"  For example: contains \"^login\"\n\nEnds with: contains \"<your string>$\"  For example: contains \"login$\"\n\nDoes not start with: not-contains \"^<your string>\"\n\nDoes not end with: not-contains \"<your string>$\"\n\n\n\nReserved Characters: \n\n\n\" - Enclose values: URL == \"/admin\"\n\n& - Combine predicates with AND: URL == \"/admin\" & CountryCode == GB\n\n| - Combine two predicates with an OR logic: ClientIP == 192.168.1.1 & (URL == \"/admin\" | QueryString != \"s=search\")\n\n; - Create a list of values to match: URL == \"/admin\";\"/home\"\n\n\" - Used to escape reserved characters: QueryString != 's=\"search\"'\n\n() - Construct complex logic: A & B & (C | D) & F *\n\n\n\nAlso see https://docs.imperva.com/bundle/cloud-application-security/page/rules/rule-syntax.htm",
                        "in": "formData",
                        "name": "filter",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Rule TTL. Only relevant when action is HTTP_CACHE_MAKE_STATIC or HTTP_CACHE_CLIENT_CACHE_CTL",
                        "in": "formData",
                        "name": "ttl",
                        "type": "string",
                        "enum":["HTTP_CACHE_MAKE_STATIC","HTTP_CACHE_CLIENT_CACHE_CTL"],
						"required": false
                    },
                    {
                    	"description":"Rule TTL time unit.\n\nMust be one of SECONDS, MINUTES, HOURS, DAYS or WEEKS. If no time unit is provided, SECONDS is used.\n\nOnly relevant when action is HTTP_CACHE_MAKE_STATIC or HTTP_CACHE_CLIENT_CACHE_CTL",
                        "in": "formData",
                        "name": "ttl_unit",
                        "type": "string",
                        "enum":["SECONDS","MINUTES","HOURS","DAYS","WEEKS"],
						"required": false
                    },
                    {
                    	"description":"Value to differentiate by. HTTP_CACHE_DIFFERENTIATE_BY_HEADER - header name, HTTP_CACHE_DIFFERENTIATE_BY_COOKIE - cookie name, HTTP_CACHE_DIFFERENTIATE_BY_GEO - geo location (ISO 3166-1 alpha-2 country codes ), otherwise irrelevant.",
                        "in": "formData",
                        "name": "differentiated_by_value",
                        "type": "string",
                        "enum":["HTTP_CACHE_DIFFERENTIATE_BY_HEADER","HTTP_CACHE_DIFFERENTIATE_BY_COOKIE","HTTP_CACHE_DIFFERENTIATE_BY_GEO"],
						"required": false
                    },
                    {
                    	"description":"Comma separated list of parameters to ignore.",
                        "in": "formData",
                        "name": "params",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"When set to true: all parameters in cache key will be ignored.\n\nDefault: false.\n\nRelevant for HTTP_CACHE_IGNORE_PARAMS action",
                        "in": "formData",
                        "name": "all_params",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"The name of the tag to add.",
                        "in": "formData",
                        "name": "tag_name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Add text to the cache key as suffix. Relevant for the HTTP_CACHE_ENRICH_CACHE_KEY action",
                        "in": "formData",
                        "name": "text",
                        "type": "string",
						"required": false
                    } 
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/caching-rules/delete": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"ID of the rule to change.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/caching-rules/enable": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"ID of the rule to change.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"When true, the rule will be enabled. Set to false to disable.",
                        "in": "formData",
                        "name": "enable",
                        "type": "boolean",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/caching-rules/list": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"ID of the rule to change.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
						"required": false
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "HTTP_CACHE_FORCE_UNCACHEABLE": [
                                {
                                    "id": "3746",
                                    "name": "rule1",
                                    "action": "HTTP_CACHE_FORCE_UNCACHEABLE",
                                    "filter": "URL ==  \"/admin\"",
                                    "disabled": "false",
                                    "disabledByCacheMode": "false"
                                }
                            ],
                            "HTTP_CACHE_DIFFERENTIATE_BY_COOKIE": [
                                {
                                    "id": "3749",
                                    "name": "rule3",
                                    "action": "HTTP_CACHE_DIFFERENTIATE_BY_COOKIE",
                                    "filter": "CookieExists == \"xGroup\"",
                                    "differentiatedByValue": "xGroup",
                                    "disabled": "false",
                                    "disabledByCacheMode": "false"
                                }
                            ],
                            "HTTP_CACHE_CREATE_TAG": [
                                {
                                    "id": "3745",
                                    "name": "rule4",
                                    "action": "HTTP_CACHE_CREATE_TAG",
                                    "filter": "User-Agent contains \"Iphone\" | User-Agent contains \"Android\"",
                                    "tag": "mobile",
                                    "disabled": "false",
                                    "disabledByCacheMode": "false"
                                }
                            ],
                            "HTTP_CACHE_IGNORE_PARAMS": [
                                {
                                    "id": "3751",
                                    "name": "rule7",
                                    "action": "HTTP_CACHE_IGNORE_PARAMS",
                                    "params": "oid",
                                    "filter": "ParamExists == \"oid\"",
                                    "disabled": "false",
                                    "disabledByCacheMode": "false"
                                },
                                {
                                    "id": "3752",
                                    "name": "rule8",
                                    "action": "HTTP_CACHE_IGNORE_PARAMS",
                                    "params": "xid",
                                    "filter": "ParamExists == \"xid\"",
                                    "disabled": "false",
                                    "disabledByCacheMode": "false"
                                }
                            ],
                            "HTTP_CACHE_MAKE_STATIC": [
                                {
                                    "id": "3744",
                                    "name": "rule9",
                                    "action": "HTTP_CACHE_MAKE_STATIC",
                                    "ttl": "1",
                                    "ttlUnit": "MINUTES",
                                    "filter": "URL ==  \"/admin\"",
                                    "disabled": "false",
                                    "disabledByCacheMode": "false"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/error-page/modify": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The error page HTML template. $TITLE% and $BODY$ placeholders are required.",
                        "in": "formData",
                        "name": "error_page_template ",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/error-page": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "error_page_template":""
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/purge": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Comma separated list of URLs where the resource is located.",
                        "in": "formData",
                        "name": "resource_url",
                        "type": "string",
                        "item":{"type":"string"},
						"required": true
                    },
                    {
                    	"description":"Comma separated list of pattern. One of: contains | equals | prefix | suffix | not_equals | not_contains | not_prefix | not_suffix",
                        "in": "formData",
                        "name": "resource_pattern",
                        "type": "string",
                        "enum":["contains","equals","prefix","suffix","not_equals","not_contains","not_prefix","not_suffix"],
						"required": true
                    },
                    {
                    	"description":"Should purge all cached resources on site.\n\nPossible values:\n\nIf the parameter does not exist, is null, or an empty string, it is ignored and only specific resources defined by the resource_pattern and resource_url parameters are purged.\n\ntrue: All site resources are purged.\n\nfalse: Nothing is done.\n\nAny other string: An error is returned.",
                        "in": "formData",
                        "name": "should_purge_all_site_resources",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/response-headers": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Comma separated list of header names to be cached.",
                        "in": "formData",
                        "name": "cache_headers",
                        "type": "string",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Cache all response headers. Pass \"true\" or \"false\" in the value parameter. Cannot be selected together with cache_headers. Default:false",
                        "in": "formData",
                        "name": "cache_all_headers",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK" 
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/response-headers/get": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "enabled":true,
                        "mode":"CUSTOM",
                        "custom_headers":[
                            "header1",
                            "header2",
                            "header3"
                        ],
                        "res":0,
                        "res_message":"OK",
                        "debug_info":{
                            "id-info":"999999"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/secure-resources": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"do_not_cache - Do not cache HTTPS resources\n\ndefaults - Use default HTTPS caching. Do not cache HTML pages\n\ndefaults_with_html - Use default HTTPS caching. Also cache HTML pages\n\ngeneral - Cache HTTPS according to general caching settings",
                        "in": "formData",
                        "name": "secured_resources_mode",
                        "type": "string",
                        "enum":["do_not_cache","defaults","defaults_with_html","general"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/stale-content": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Pass true to serve stale content, false to disable the option.",
                        "in": "formData",
                        "name": "serve_stale_content",
                        "type": "boolean",
						"required": true
                    },
                    {
                    	"description":"Pass ADAPTIVE to use Imperva's algorithm, or CUSTOM to specify an amount of time. When using CUSTOM, you must specify the time and time_unit parameters.",
                        "in": "formData",
                        "name": "stale_content_mode",
                        "type": "string",
                        "enum":["ADAPTIVE","CUSTOM","CUSTOM"],
						"required": false
                    },
                    {
                    	"description":"A positive number representing the amount of time to serve stale content.",
                        "in": "formData",
                        "name": "time",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Stale content time unit. One of SECONDS, MINUTES, HOURS.",
                        "in": "formData",
                        "name": "time_unit",
                        "type": "string",
                        "enum":["SECONDS","MINUTES","HOURS"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/stale-content/get": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "enabled":true,
                            "mode":"ADAPTIVE",
                            "time":11,
                            "unit":"SECONDS",
                            "res":0,
                            "res_message":"OK",
                            "debug_info":{
                                "id-info":"999999"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/performance/tag-response": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Specify which origin response header contains the cache tags in your resources. default: \"\".",
                        "in": "formData",
                        "name": "header",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "res": 0,
                    "res_message": "OK"
                }
            }
        },
        "/prov/v1/sites/performance/tag-response/get": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "header":"some_header",
                    "res":0,
                    "res_message":"OK",
                    "debug_info":{
                        "id-info":"999999"
                    }
                }
            }
        },        
        "/prov/v1/sites/report": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"The report to get. One of: pci-compliance. ",
                        "in": "formData",
                        "name": "report",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The format to get the report in. One of: pdf | html",
                        "in": "formData",
                        "name": "format",
                        "type": "string",
                        "enum":["pdf","html"],
						"required": true
                    },
                    {
                    	"description":"Time range to fetch data for, if custom then specify start and end timestamps.",
                        "in": "formData",
                        "name": "time_range",
                        "type": "string",
                        "enum":["today","last_7_days","last_30_days","last_90_days","month_to_date","custom"],
						"required": false
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "format" : "pdf",
                            "report" : "JVBERi0xLjUNCiXvv73vv73vv73vv70NCjEgMCBvYmoNCjw8L1R5cGUvQ2F0YWxvZy9QYWdlcyAyIDAgUi9MYW5nKGVuLVVT ..."
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/setlog": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Available only for customers that purchased the Logs Integration SKU. Sets the log reporting level for the site. \n\nPossible values: full, security, none, default",
                        "in": "formData",
                        "name": "log_level",
                        "type": "string",
                        "enum":["full","security","none","default"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/status": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"List of tests to run on site before returning its status. A comma separated list of one of: domain_validation, services, dns. See detailed description below.",
                        "in": "formData",
                        "name": "tests",
                        "type": "string",
                        "enum":["domain_validation","services","dns"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "status": "pending_dns_changes",
                            "ips": [
                                "34.33.22.1"
                            ],
                            "dns": [
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "CNAME",
                                    "set_data_to": "x343.incapdns.net"
                                },
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "original_dns": [
                                {
                                    "dns_record_name": "example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.11"
                                    ]
                                },
                                {
                                    "dns_record_name": "www.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": [
                                        "66.45.177.50"
                                    ]
                                }
                            ],
                            "warnings": [
                                {
                                    "type": "FTP",
                                    "dns_record_name": "ftp.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                },
                                {
                                    "type": "MAIL",
                                    "mail_record_name": "mail.example.com",
                                    "set_type_to": "A",
                                    "set_data_to": "10.200.0.0"
                                }
                            ],
                            "security": {
                                "waf": {
                                    "rules": [
                                        {
                                            "id": "api.threats.bot_access_control",
                                            "name": "Bot Access Control",
                                            "block_bad_bots": true,
                                            "challenge_suspected_bots": true
                                        },
                                        {
                                            "id": "api.threats.sql_injection",
                                            "name": "SQL Injection",
                                            "action": "api.threats.action.block_request",
                                            "action_text": "Block Request"
                                        },
                                        {
                                            "id": "api.threats.cross_site_scripting",
                                            "name": "Cross Site Scripting (XSS)",
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/gsddg",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 244711494
                                                }
                                            ],
                                            "action": "api.threats.action.alert",
                                            "action_text": "Alert Only"
                                        },
                                        {
                                            "id": "api.threats.illegal_resource_access",
                                            "name": "Illegal Resource Access",
                                            "action": "api.threats.action.block_user",
                                            "action_text": "Block User"
                                        },
                                        {
                                            "id": "api.threats.ddos",
                                            "name": "DDoS",
                                            "activation_mode": "api.threats.ddos.activation_mode.off",
                                            "activation_mode_text": "Off",
                                            "ddos_traffic_threshold": "api.threats.ddos.ddos_trassic_threshold",
                                            "ddos_traffic_threshold_text": "750"
                                        },
                                        {
                                            "id": "api.threats.backdoor",
                                            "name": "Backdoor Protect",
                                            "action": "api.threats.action.quarantine_url",
                                            "action_text": "Auto-Quarantine"
                                        },
                                        {
                                            "action": "api.threats.action.block_ip",
                                            "action_text": "Block IP",
                                            "id": "api.threats.remote_file_inclusion",
                                            "name": "Remote File Inclusion"
                                        }
                                    ]
                                },
                                "acls": {
                                    "rules": [
                                        {
                                            "ips": [
                                                "2.3.4.5"
                                            ],
                                            "exceptions": [
                                                {
                                                    "values": [
                                                        {
                                                            "urls": [
                                                                {
                                                                    "value": "/home",
                                                                    "pattern": "EQUALS"
                                                                }
                                                            ],
                                                            "id": "api.rule_exception_type.url",
                                                            "name": "URL"
                                                        }
                                                    ],
                                                    "id": 493271006
                                                }
                                            ],
                                            "id": "api.acl.blacklisted_ips",
                                            "name": "Visitors from blacklisted IPs"
                                        }
                                    ]
                                }
                            },
                            "active": "active",
                            "acceleration_level": "advanced",
                            "site_creation_date": 1372573842000,
                            "sealLocation": {
                                "id": "api.seal_location.bottom_right",
                                "name": "Bottom right"
                            },
                            "ssl": {
                                "origin_server": {
                                    "detected": true,
                                    "detectionStatus": "ok"
                                },
                                "generated_certificate": {
                                    "ca": "globalsign",
                                    "validation_method": "dns",
                                    "validation_data": [
                                        {
                                            "dns_record_name": "www.example.com",
                                            "set_type_to": "TXT",
                                            "set_data_to": "globalsign-domain-verification=rgwlWGF7wQsdWdhbd54pGGruzskFMVezwMvnUtRAzW"
                                        }
                                    ],
                                    "san": [
                                        "*.example.com",
                                        "example.com"
                                    ],
                                    "validation_status": "pending_user_action"
                                },
                                "custom_certificate": {
                                    "active": true,
                                    "expirationDate": 1460100446000,
                                    "revocationError": false,
                                    "validityError": false,
                                    "chainError": false,
                                    "hostnameMismatchError": true
                                }
                            },
                            "login_protect": {
                                "enabled": true,
                                "specific_users_list": [
                                    {
                                        "email": "john@example.com",
                                        "name": "John Doe",
                                        "status": "INVITATION_SENT"
                                    },
                                    {
                                        "email": "jane@example.com",
                                        "name": "Jane Doe",
                                        "status": "ACTIVATED"
                                    }
                                ],
                                "send_lp_notifications": true,
                                "allow_all_users": false,
                                "authentication_methods": [
                                    "sms",
                                    "ga"
                                ],
                                "urls": [
                                    "/wp-admin"
                                ],
                                "url_patterns": [
                                    "PREFIX"
                                ]
                            },
                            "performance_configuration": {
                                "advanced_caching_rules": {
                                    "never_cache_resources": [
                                        {
                                            "pattern": "SUFFIX",
                                            "url": "/test.html"
                                        }
                                    ],
                                    "always_cache_resources": [
                                        {
                                            "pattern": "NOT_EQUALS",
                                            "url": "/index.html",
                                            "ttl": 5,
                                            "ttlUnits": "SECONDS"
                                        },
                                        {
                                            "pattern": "EQUALS",
                                            "url": "/home.html",
                                            "ttl": 6,
                                            "ttlUnits": "DAYS"
                                        }
                                    ]
                                },
                                "acceleration_level": "advanced",
                                "async_validation": true,
                                "minify_javascript": true,
                                "minify_css": true,
                                "minify_static_html": true,
                                "compress_jpeg": true,
                                "progressive_image_rendering": true,
                                "aggressive_compression": true,
                                "compress_png": true,
                                "on_the_fly_compression": true,
                                "tcp_pre_pooling": true,
                                "comply_no_cache": true,
                                "comply_vary": true,
                                "use_shortest_caching": true,
                                "support_all_tls_versions": true,
                                "prefer_last_modified": true,
                                "disable_client_side_caching": true,
                                "cache_headers": [
                                    {
                                        "headerName": "Content-type: application/pdf"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/tls": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Support all TLS versions. Default value: false",
                        "in": "formData",
                        "name": "support_all_tls_versions",
                        "type": "boolean",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "support_all_tls_versions": "true",
                                "new_A_record": "1.2.3.4"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/xray/get-link": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "url": "http://your.domain.here.com/_Incapsula_Resource?SW_XRAY=0&ticket=12345iF1WOv21EeG4fIntA%3D%3D",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "13007"
                            }
                        }
                    }
                }
            }
        },
        "/logscollector/change/status": {
            "post": {
                "parameters": [
                    {
                    	"description":"The Logs Collector configuration identifier.",
                        "in": "formData",
                        "name": "config_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The new configuration status of the Logs Collector.\\n\\nPossible values: ACTIVE, SUSPENDED",
                        "in": "formData",
                        "name": "logs_config_new_status",
                        "type": "string",
                        "enum":["ACTIVE","SUSPENDED"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/logscollector/upload/publickey": {
            "post": {
                "parameters": [
                    {
                    	"description":"The Logs Collector configuration identifier.",
                        "in": "formData",
                        "name": "config_id",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"The public key file(2048bit) in base64 format (without password protection)",
                        "in": "formData",
                        "name": "public_key",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "publicKeyId":1,
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/stats/v1": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to fetch data for.\n\nNote: You must specify either account_id or site_id.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Numeric identifier of the site to fetch data for. Multiple sites can be specified in a comma separated list. For example: 123,124,125.\n\nNote: You must specify either account_id or site_id.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
                        "item":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Time range to fetch data for.",
                        "in": "formData",
                        "name": "time_range",
                        "type": "string",
                        "enum":["today","last_7_days","last_30_days","last_90_days","month_to_date","custom"],
						"required": false
                    },
                    {
                    	"description":"(If time_range custom) The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"(If time_range custom) The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Statistics to fetch, as specified in the table below. Multiple statistics can be specified in a comma separated list. For possible values see below:\n\nvisits_timeseries: Number of visits by type (Humans/Bots) over time.\n\nhits_timeseries: Number of hits by type (Humans/Bots/Blocked) over time and per second.\n\nbandwidth_timeseries: Amount of bytes (bandwidth) and bits per second (throughput) transferred via the Imperva network from clients to proxy servers and vice-versa over time.\n\nrequests_geo_dist_summary: Total number of requests routed via the Imperva network by data center location.\n\nvisits_dist_summary: Total number of visits per client application and country.\n\ncaching: Total number of requests and bytes that were cached by the Imperva network.\n\ncaching_timeseries: Number of requests and bytes that were cached by the Imperva network, with one day resolution, with info regarding the caching mode (standard or advanced).\n\nthreats: Total number of threats by type with additional information regarding the security rules configuration.\n\nincap_rules: List of security rules with total number of reported incidents for each rule.\n\nincap_rules_timeseries: List of security rules with a series of reported incidents for each rule with the specified granularity.",
                        "in": "formData",
                        "name": "stats",
                        "type": "string",
                        "enum":["visits_timeseries","hits_timeseries","bandwidth_timeseries","requests_geo_dist_summary","visits_dist_summary","caching","caching_timeseries","threats","incap_rules","incap_rules_timeseries"],
						"required": false
                    },
                    {
                    	"description":"Time interval in milliseconds between data points for time series statistics. (See the timeseries values in the table below.)\n\n\n\nThe default granularity depends on the specified time range, as follows:\n\n\n\nTime range of less than 24 hours: Default granularity is 7200000 (2 hours).\n\nTime range of between 24 hours and 30 days: Default granularity is 86400000 (1 day).\n\nTime range of more than 30 days: Default granularity is 259200000 (3 days).\n\n\n\nThe response includes one result for each interval. For example, if you specify a time range value of last_7_days, the default granularity is 1 day, and the response will return 7 results.",
                        "in": "formData",
                        "name": "granularity",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "visits_timeseries": [
                                {
                                    "id": "api.stats.visits_timeseries.human",
                                    "name": "Human visits",
                                    "data": [
                                        [
                                            1344247200000,50
                                        ],
                                        [
                                            1344247800000,40
                                        ]
                                    ]
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/visits/v1": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Time range to fetch data for. Default is last_7_days.",
                        "in": "formData",
                        "name": "time_range",
                        "type": "string",
                        "enum":["today","last_7_days","last_30_days","last_90_days","month_to_date","custom"],
						"required": false
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Filter the sessions that were handled according to the security-related specifications. Multiple values are supported, e.g.: \"api.threats.action.block_ip, api.threats.sql_injection\". \n\nSupportred values are:\n\napi.threats.action.disabled\napi.threats.action.alert\napi.threats.action.block_request\napi.threats.action.block_user\napi.threats.action.block_ip\napi.threats.action.quarantine_url",
                        "in": "formData",
                        "name": "security",
                        "type": "string",
                        "enum":["api.threats.action.disabled","api.threats.action.alert","api.threats.action.block_request","api.threats.action.block_user","api.threats.action.block_ip","api.threats.action.quarantine_url"],
                        "uniqueItems":false,
                        "required": false
                    },
                    {
                    	"description":"Filter the sessions coming from the specified country.",
                        "in": "formData",
                        "name": "country",
                        "type": "string",
                        "enum":["AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW"],
						"required": false
                    },
                    {
                    	"description":"Filter the sessions coming from the specified IP.",
                        "in": "formData",
                        "name": "ip",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Comma separated list of visit IDs to load.",
                        "in": "formData",
                        "name": "visit_id",
                        "type": "array",
                        "items":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Whether or not to list visits that did not end and that may still be updated.\\n\\nPossible values: true, false\\n\\nDefault: true",
                        "in": "formData",
                        "name": "list_live_visits",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example": {
                            "visits": [
                                {
                                    "id": "133077760038625792",
                                    "siteId": 7,
                                    "startTime": 1361468485000,
                                    "clientIPs": [
                                        "12.13.14.15"
                                    ],
                                    "country": [
                                        "Sweden"
                                    ],
                                    "countryCode": [
                                        "SE"
                                    ],
                                    "clientType": "Unclassified",
                                    "clientApplication": "Bot",
                                    "clientApplicationVersion": "0",
                                    "httpVersion": "2.0",
                                    "userAgent": "Mozilla/4.0 (compatible; MSIE 5.0; Windows 95; DigExt)",
                                    "os": "Windows",
                                    "osVersion": "Windows",
                                    "supportsCookies": true,
                                    "supportsJavaScript": false,
                                    "hits": 1,
                                    "pageViews": 1,
                                    "entryReferer": "http://lp.usafis.org/_Incapsula_Resource?CWUDNSAI=9_E1521557&incident_id=133077760038102423-139906691365201416&edet=12&cinfo=2ef678e2c753856785000000",
                                    "entryPage": "www.incapsula.com/ddos/ddos-mitigation-services",
                                    "servedVia": [
                                        "Los Angeles,CA"
                                    ],
                                    "securitySummary": {
                                        "api.threats.sql_injection": 2,
                                        "api.threats.cross_site_scripting": 1,
                                        "api.threats.illegal_resource_access": 3,
                                        "api.threats.remote_file_inclusion": 2,
                                        "api.threats.customRule": 3,
                                        "api.threats.ddos=DDoS": 4,
                                        "api.threats.backdoor": 2,
                                        "api.threats.bot_access_control": 1,
                                        "api.acl.blacklisted_countries": 1,
                                        "api.acl.blacklisted_urls": 1,
                                        "api.acl.blacklisted_ips": 1
                                    },
                                    "actions": [
                                        {
                                            "requestResult": "api.request_result.req_challenge_javascript",
                                            "isSecured": false,
                                            "url": "www.google.com/ddos/ddos-mitigation-services",
                                            "threats": [
                                                {
                                                    "securityRule": "api.threats.illegal_resource_access",
                                                    "alertLocation": "api.alert_location.alert_location_path",
                                                    "attackCodes": [
                                                        "9070.0"
                                                    ],
                                                    "securityRuleAction": "api.rule_action_type.rule_action_block"
                                                },
                                                {
                                                    "securityRule": "api.threats.bot_access_control",
                                                    "alertLocation": "api.alert_location.alert_location_path",
                                                    "attackCodes": [
                                                        "915.0"
                                                    ],
                                                    "securityRuleAction": "api.rule_action_type.rule_action_block"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "site_id": 123
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra/stats": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Specific Protected IP or IP range. For example, 1.1.1.0/24.",
                        "in": "formData",
                        "name": "ip_prefix",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Specific traffic. One of: Total, Passed, Blocked.",
                        "in": "formData",
                        "name": "traffic",
                        "type": "string",
                        "enum":["Total","Passed","Blocked"],
						"required": false
                    },
                    {
                    	"description":"A comma separated list of specific traffic types. Any of: UDP, TCP, DNS, DNS_RESPONSE, ICMP, SYN, FRAG, LARGE_SYN, NTP, NETFLOW, SSDP, GENERAL. Cannot be used together with the pop parameter.",
                        "in": "formData",
                        "name": "traffic_type",
                        "type": "string",
                        "enum":["UDP","TCP","DNS","DNS_RESPONSE","ICMP","SYN","FRAG","LARGE_SYN","NTP","NETFLOW","SSDP","GENERAL"],
                        "uniqueItems":false,
						"required": false
                    },
                    {
                    	"description":"A comma separated list of specific PoP names. For example: iad, tko. Cannot be used together with the traffic_type parameter. For the list of PoP codes and locations, see Imperva Data Centers (PoPs).",
                        "in": "formData",
                        "name": "pop",
                        "type": "array",
                        "items":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "stats": [
                                {
                                    "objectId": 607074,
                                    "payload": [
                                        {
                                            "interval": 15000,
                                            "startTime": 1509936300000,
                                            "data": [
                                                0,
                                                15
                                            ],
                                            "metric": "pps",
                                            "pop": "tko",
                                            "ipPrefix": "192.168.205.0/24",
                                            "ipPrefixType": "bgp",
                                            "traffic": "passed"
                                        },
                                        {
                                            "interval": 15000,
                                            "startTime": 1509936300000,
                                            "data": [
                                                7968575,
                                                8484564
                                            ],
                                            "metric": "bw",
                                            "pop": "tko",
                                            "ipPrefix": "192.168.205.0/24",
                                            "ipPrefixType": "bgp",
                                            "traffic": "passed"
                                        }
                                    ]
                                }
                            ],
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {}
                        }
                    }
                }
            }
        },
        "/v1/infra/events": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"A comma separated list of specific event types. Any of: \\n\\nGRE_TUNNEL_UP\nGRE_TUNNEL_DOWN\nORIGIN_CONNECTION_GRE_UP\nORIGIN_CONNECTION_GRE_DOWN\nORIGIN_CONNECTION_ECX_UP\nORIGIN_CONNECTION_ECX_DOWN\nORIGIN_CONNECTION_CROSS_CONNECT_UP\nORIGIN_CONNECTION_CROSS_CONNECT_DOWN\nDDOS_START_IP_RANGE\nDDOS_STOP_IP_RANGE\nDDOS_QUIET_TIME_IP_RANGE\nEXPORTER_NO_DATA\nEXPORTER_BAD_DATA\nEXPORTER_GOOD_DATA\nMONITORING_CRITICAL_ATTACK\nPROTECTED_IP_STATUS_UP\nPROTECTED_IP_STATUS_DOWN\nPER_IP_DDOS_START_IP_RANGE",
                        "in": "formData",
                        "name": "event_type",
                        "type": "string",
                        "enum":["GRE_TUNNEL_UP","GRE_TUNNEL_DOWN","ORIGIN_CONNECTION_GRE_UP","ORIGIN_CONNECTION_GRE_DOWN","ORIGIN_CONNECTION_ECX_UP","ORIGIN_CONNECTION_ECX_DOWN","ORIGIN_CONNECTION_CROSS_CONNECT_UP","ORIGIN_CONNECTION_CROSS_CONNECT_DOWN","DDOS_START_IP_RANGE","DDOS_STOP_IP_RANGE","DDOS_QUIET_TIME_IP_RANGE","EXPORTER_NO_DATA","EXPORTER_BAD_DATA","EXPORTER_GOOD_DATA","MONITORING_CRITICAL_ATTACK","PROTECTED_IP_STATUS_UP","PROTECTED_IP_STATUS_DOWN","PER_IP_DDOS_START_IP_RANGE"],
                        "uniqueItems":false,
						"required": false
                    },
                    {
                    	"description":"Specific Protected IP or IP range. For example, 1.1.1.0/24.",
                        "in": "formData",
                        "name": "ip_prefix",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"The number of objects to return in the response. Default is 50. Maximum: 100",
                        "in": "formData",
                        "name": "page_size",
                        "type": "integer",
                        "enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],
						"required": false
                    },
                    {
                    	"description":"The page to return starting from 0. Default is 0.",
                        "in": "formData",
                        "name": "page_num",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "events":[
                                {
                                    "eventTime":"2017-12-08 10:54:59 UTC",
                                    "eventType":"DDOS_STOP_IP_RANGE",
                                    "bwTotal":9000,
                                    "ppsTotal":90,
                                    "bwPassed":200,
                                    "ppsPassed":87,
                                    "bwBlocked":8800,
                                    "ppsBlocked":3,
                                    "eventTarget":"103.28.250.93/32",
                                    "itemType":"IP_RANGE",
                                    "reportedByPop":"zrh"
                                }
                            ],
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {}
                        }
                    }
                }
            }
        },
        "/v1/infra/top-table": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The customer's IP range.",
                        "in": "formData",
                        "name": "ip_range",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"One of the following: BGP, PROTECTED_IP",
                        "in": "formData",
                        "name": "range_type",
                        "type": "string",
                        "enum":["BGP", "PROTECTED_IP"],
						"required": true
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"One of the following: SRC_IP, DST_IP, SRC_PORT_PROTOCOL, DST_PORT_PROTOCOL",
                        "in": "formData",
                        "name": "data_type",
                        "type": "string",
                        "enum":["SRC_IP", "DST_IP", "SRC_PORT_PROTOCOL", "DST_PORT_PROTOCOL"],
						"required": true
                    },
                    {
                    	"description":"One of the following: BW, PPS",
                        "in": "formData",
                        "name": "metric_type",
                        "type": "string",
                        "enum":["BW", "PPS"],
						"required": true
                    },
                    {
                    	"description":"One of the following: BLOCK, PASS",
                        "in": "formData",
                        "name": "mitigation_type",
                        "type": "string",
                        "enum":["BLOCK", "PASS"],
						"required": true
                    },
                    {
                    	"description":"One of the following: PEAK, AVERAGE",
                        "in": "formData",
                        "name": "aggregation_type",
                        "type": "string",
                        "enum":["PEAK", "AVERAGE"],
						"required": true
                    },
                    {
                    	"description":"The data region to use. If not specified, account's default data region will be used.",
                        "in": "formData",
                        "name": "data_storage_region",
                        "type": "string",
                        "enum":["APAC","EU","US","DEFAULT"],
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "stats": [
                                {
                                    "object": "100.13.0.1",
                                    "value": 334229.33,
                                    "total": 1111616
                                },
                                {
                                    "object": "100.13.0.3",
                                    "value": 334160,
                                    "total": 1109938
                                }
                            ],
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {}
                        }
                    }
                }
            }
        },
        "/v1/infra/top-graph": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The customer's IP range.",
                        "in": "formData",
                        "name": "ip_range",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"One of the following: BGP, PROTECTED_IP",
                        "in": "formData",
                        "name": "range_type",
                        "type": "string",
                        "enum":["BGP", "PROTECTED_IP"],
						"required": true
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"One of the following: SRC_IP, DST_IP, SRC_PORT_PROTOCOL, DST_PORT_PROTOCOL",
                        "in": "formData",
                        "name": "data_type",
                        "type": "string",
                        "enum":["SRC_IP", "DST_IP", "SRC_PORT_PROTOCOL", "DST_PORT_PROTOCOL"],
						"required": true
                    },
                    {
                    	"description":"One of the following: BW, PPS",
                        "in": "formData",
                        "name": "metric_type",
                        "type": "string",
                        "enum":["BW", "PPS"],
						"required": true
                    },
                    {
                    	"description":"One of the following: BLOCK, PASS",
                        "in": "formData",
                        "name": "mitigation_type",
                        "type": "string",
                        "enum":["BLOCK", "PASS"],
						"required": true
                    },
                    {
                    	"description":"A comma separated list of items to fetch data for. e.g., 10.10.10.10, 2.2.2.2. If not specified, top items are automatically fetched.",
                        "in": "formData",
                        "name": "objects",
                        "type": "array",
                        "item":{"type":"string"},
						"required": true
                    },
                    {
                    	"description":"The data region to use. If not specified, account's default data region will be used.",
                        "in": "formData",
                        "name": "data_storage_region",
                        "type": "string",
                        "enum":["APAC","EU","US","DEFAULT"],
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "stats":[
                                {
                                    "objectId":200,
                                    "time":1522761000000,
                                    "payload":[
                                        {
                                            "interval":15000,
                                            "startTime":1522761000000,
                                            "data":[
                                                4627,
                                                4067,
                                                4245
                                            ],
                                            "metric":"pps",
                                            "dataType":"ip",
                                            "item":"100.13.0.1",
                                            "traffic":"blocked"
                                        },
                                        {
                                            "interval":15000,
                                            "startTime":1522761000000,
                                            "data":[
                                                331656,
                                                333291,
                                                333387
                                            ],
                                            "metric":"pps",
                                            "dataType":"ip",
                                            "item":"100.13.0.3",
                                            "traffic":"blocked"
                                        }
                                    ]
                                }
                            ],
                            "res":0,
                            "res_message":"OK",
                            "debug_info":{
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra/histogram": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. If not specified, operation will be performed on the account identified by the authentication parameters.",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The customer's IP range.",
                        "in": "formData",
                        "name": "ip_range",
                        "type": "string",
						"required": true
                    },
                    {
                    	"description":"One of the following: BGP, PROTECTED_IP",
                        "in": "formData",
                        "name": "range_type",
                        "type": "string",
                        "enum":["BGP", "PROTECTED_IP"],
						"required": true
                    },
                    {
                    	"description":"The start date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "start",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"The end date in milliseconds, since 1970.",
                        "in": "formData",
                        "name": "end",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"One of the following: BLOCK, PASS",
                        "in": "formData",
                        "name": "mitigation_type",
                        "type": "string",
                        "enum":["BLOCK", "PASS"],
						"required": true
                    },
                    {
                    	"description":"A comma separated list of items to fetch data for. e.g., 10.10.10.10, 2.2.2.2. If not specified, top items are automatically fetched.",
                        "in": "formData",
                        "name": "objects",
                        "type": "array",
                        "item":{"type":"string"},
						"required": true
                    },
                    {
                    	"description":"The data region to use. If not specified, account's default data region will be used.",
                        "in": "formData",
                        "name": "data_storage_region",
                        "type": "string",
                        "enum":["APAC","EU","US","DEFAULT"],
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "stats":{
                                "PL_100":366450640,
                                "PL_200":305475960,
                                "PL_300":0,
                                "PL_400":0,
                                "PL_500":0,
                                "PL_600":0,
                                "PL_700":0,
                                "PL_800":6053680,
                                "PL_900":0,
                                "PL_1000":0,
                                "PL_1100":0,
                                "PL_1200":0,
                                "PL_1300":0,
                                "PL_1400":0,
                                "PL_1500":0
                            },
                            "res":0,
                            "res_message":"OK",
                            "debug_info":{
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/lp/add-user": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. ",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Email address. For example: \"joe@example.com\".",
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true
                    },
                    {
                    	"description":"Example: John Smith",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Phone number, <country code>-<number>. For example: \"1-8662507659\"",
                        "in": "formData",
                        "name": "phone",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Whether or not to skip email address verification.",
                        "in": "formData",
                        "name": "is_email_verified",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Whether or not to skip phone verification.",
                        "in": "formData",
                        "name": "is_phone_verified",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Whether or not to send activation email to user.",
                        "in": "formData",
                        "name": "should_send_activation_email",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                             "debug_info": {
                                "user E-Mail": "admin@example.com"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/lp/configure-app": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Protect admin areas of joomla | wordpress | phpBB.",
                        "in": "formData",
                        "name": "protected_app",
                        "type": "string",
                        "enum":["joomla","wordpress","phpBB"],
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/lp/configure": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the site to operate on.",
                        "in": "formData",
                        "name": "site_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Pass true to enable login protect on site, and false to disable it.\n\nDefault: true",
                        "in": "formData",
                        "name": "enabled",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Comma separated email list to set login protect users for the site. If the list is empty all users will be allowed to access the site using Login Protect.",
                        "in": "formData",
                        "name": "specific_users_list",
                        "type": "array",
                        "items":{"type":"string"},
						"required": false
                    },
                    {
                    	"description":"Pass true to send notification on successful login using login protect.\n\nDefault: false",
                        "in": "formData",
                        "name": "send_lp_notifications",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Pass true to allow all login protect users to access the site. If you want to allow only a specific list of users to access the site using Login Protect set this to false, and add the list to specific_user_list.\n\nDefault: true",
                        "in": "formData",
                        "name": "allow_all_users",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Comma separated list of allowed authentication methods: sms | email | ga",
                        "in": "formData",
                        "name": "authentication_methods",
                        "type": "string",
                        "enum":["email","email","ga"],
						"required": false
                    },
                    {
                    	"description":"A comma separated list of resource paths. For example, /home and /admin/index.html are resource paths, while http://www.example.com/home is not. Each URL should be encoded separately using percent encoding as specified by RFC 3986 (http://tools.ietf.org/html/rfc3986#section-2.1). An empty URL list will remove all URLs.",
                        "in": "formData",
                        "name": "urls",
                        "type": "string",
                        "items":{"type":"string"},
						"required": false
                    },
                    {
                        "description":"A comma separated list of url patterns. Possible values: contains | equals | prefix | suffix | not_equals | not_contain | not_prefix | not_suffix. The patterns should be in accordance with the matching urls sent by the urls parameter.",
                        "in": "formData",
                        "name": "url_patterns",
                        "type": "string",
                        "items":{"type":"string"},
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{}
                    }
                }
            }
        },
        "/prov/v1/sites/lp/edit-user": {
            "post": {
                "parameters": [
                    {
                        "description":"Numeric identifier of the account to operate on. ",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Email address. For example: \"joe@example.com\".",
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true
                    },
                    {
                    	"description":"Example: John Smith",
                        "in": "formData",
                        "name": "name",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Phone number, <country code>-<number>. For example: \"1-8662507659\"",
                        "in": "formData",
                        "name": "phone",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Whether or not to skip email address verification.",
                        "in": "formData",
                        "name": "is_email_verified",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Whether or not to skip phone verification.",
                        "in": "formData",
                        "name": "is_phone_verified",
                        "type": "boolean",
						"required": false
                    },
                    {
                    	"description":"Whether or not to send activation email to user.",
                        "in": "formData",
                        "name": "should_send_activation_email",
                        "type": "boolean",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                             "debug_info": {
                                "user E-Mail": "admin@example.com"
                            }
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/lp/remove": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. ",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Email address. For example: \"joe@example.com\".",
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {}
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/lp/send-sms": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. ",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    },
                    {
                    	"description":"Email address. For example: \"joe@example.com\".",
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true
                    },
                    {
                    	"description":"Text that will be sent in SMS.",
                        "in": "formData",
                        "name": "sms_text",
                        "type": "string",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {}
                        }
                    }
                }
            }
        },
        "/prov/v1/sites/lp/users": {
            "post": {
                "parameters": [
                    {
                    	"description":"Numeric identifier of the account to operate on. ",
                        "in": "formData",
                        "name": "account_id",
                        "type": "integer",
						"required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "res":0,
                            "users":[
                                {
                                    "phone":"617-9876543",
                                    "creation_date":"Jun 17, 2014 10:20:04 AM",
                                    "email":"John@example.com",
                                    "name":"John Doe",
                                    "status":"INVITATION_SENT"
                                },
                                {
                                    "phone":"972-38887778",
                                    "creation_date":"May 15, 2012 08:01:11 PM",
                                    "email":"Jame@example.com",
                                    "name":"Jane Doe",
                                    "status":"REVOKED"
                                }
                            ],
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/ddos/stop": {
            "post": {
                "parameters": [
                    {
                    	"description":"The IP prefix to send a notification for. For example, 10.10.10.10.",
                        "in": "formData",
                        "name": "ip_prefix",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Number of bits per second.",
                        "in": "formData",
                        "name": "bps",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Number of packets per second.",
                        "in": "formData",
                        "name": "pps",
                        "type": "integer",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "ip_prefix": "100.1.2.0/24",
                            "status": "DDoS stop notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/connection/up": {
            "post": {
                "parameters": [
                    {
                    	"description":"The connection to send a notification for. Enter the connection name as it appears in the Cloud Security Console’s Protection Settings page. For example, Test_GRE_Tunnel.",
                        "in": "formData",
                        "name": "connection_name",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "connection_name": "CONNECTION_NAME",
                            "status": "Connection up notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/connection/down": {
            "post": {
                "parameters": [
                    {
                    	"description":"The connection to send a notification for. Enter the connection name as it appears in the Cloud Security Console’s Protection Settings page. For example, Test_GRE_Tunnel.",
                        "in": "formData",
                        "name": "connection_name",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "connection_name": "CONNECTION_NAME",
                            "status": "Connection down notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/ip-protection-status/down": {
            "post": {
                "parameters": [
                    {
                    	"description":"The IP to send a notification for. For example, 10.10.10.10.",
                        "in": "formData",
                        "name": "ip_protection",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "ip": "100.1.2.1",
                            "status": "IP Protection - status down notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/ip-protection-status/up": {
            "post": {
                "parameters": [
                    {
                    	"description":"The IP to send a notification for. For example, 10.10.10.10.",
                        "in": "formData",
                        "name": "ip_protection",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "ip": "100.1.2.1",
                            "status": "IP Protection - status up notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/monitoring/start": {
            "post": {
                "parameters": [
                    {
                    	"description":"The exporter IP to send a notification for. For example, 10.10.10.10. The exporter IP can be found in the Cloud Security Console’s Monitoring Settings page.",
                        "in": "formData",
                        "name": "exporter_ip",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "exporter_ip": "100.1.2.1",
                            "status": "Monitoring start notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/monitoring/attack-start": {
            "post": {
                "parameters": [
                    {
                    	"description":"The IP range to send a notification for. For example, 1.1.1.0/24.",
                        "in": "formData",
                        "name": "ip_prefix",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Number of bits per second.",
                        "in": "formData",
                        "name": "bps",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Number of packets per second.",
                        "in": "formData",
                        "name": "pps",
                        "type": "integer",
						"required": false
                    },
                    {
                    	"description":"Packet type. (UDP, TCP, DNS, DNS_RESPONSE, ICMP, SYN, FRAG, LARGE_SYN, NTP, NETFLOW, SSDP, GENERAL)",
                        "in": "formData",
                        "name": "packet_type",
                        "type": "string",
                        "enum":["UDP","TCP","DNS","DNS_RESPONSE","ICMP","SYN","FRAG","LARGE_SYN","NTP","NETFLOW","SSDP","GENERAL"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "ip_prefix": "100.1.2.1",
                            "status": "Monitoring attack start notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/monitoring/bad-data": {
            "post": {
                "parameters": [
                    {
                    	"description":"The exporter IP to send a notification for. For example, 10.10.10.10. The exporter IP can be found in the Cloud Security Console’s Monitoring Settings page.",
                        "in": "formData",
                        "name": "exporter_ip",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "exporter_ip": "100.1.2.1",
                            "status": "Monitoring - bad data notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                            "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/ddos/start": {
            "post": {
                "parameters": [
                    {
                    	"description":"The IP prefix to send a notification for. For example, 10.10.10.10.",
                        "in": "formData",
                        "name": "ip_prefix",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Number of bits per second.",
                        "in": "formData",
                        "name": "bbs",
                        "type": "string",
						"required": false
                    },
                    {
                    	"description":"Number of packets per second.",
                        "in": "formData",
                        "name": "pps",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "ip_prefix": "100.1.2.0/24",
                            "status": "DDoS start notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/v1/infra-protect/test-alerts/monitoring/stop": {
            "post": {
                "parameters": [
                    {
                    	"description":"The exporter IP to send a notification for. For example, 10.10.10.10. The exporter IP can be found in the Cloud Security Console’s Monitoring Settings page.",
                        "in": "formData",
                        "name": "exporter_ip",
                        "type": "string",
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "exporter_ip": "100.1.2.1",
                            "status": "Monitoring stop notification sent successfully",
                            "res": 0,
                            "res_message": "OK",
                            "debug_info": {
                                "id-info": "999999"
                            }
                        }
                    }
                }
            }
        },
        "/integration/v1/clapps": {
            "post": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "clientApps":{
                                "1":"Firefox"
                            },
                            "clientAppTypes":{
                                "1":"Browser"
                            },
                            "res": 0,
                            "res_message": "OK"
                        }
                    }
                }
            }
        },
        "/integration/v1/geo": {
            "post": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "countriesCodes":{
                                "BD":"Bangladesh",
                                "BE":"Belgium"
                            },
                            "continentsCodes":{
                                "AF":"Africa"
                            },
                            "res": 0,
                            "res_message": "OK",
                        }
                    }
                }
            }
        },
        "/integration/v1/ips": {
            "post": {
                "parameters": [
                    {
                    	"description":"Response format.\n\nPossible values: json | apache | nginx | iptables | text\n\nDefault: json",
                        "in": "formData",
                        "name": "resp_format",
                        "type": "string",
                        "enum":["json","apache","nginx","iptables","text"],
						"required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "ipRanges":[
                                "199.83.128.0/21",
                                "198.143.32.0/19"
                            ],
                            "ipv6Ranges":[
                                "2a02:e980::/29"
                            ],
                            "res":0,
                            "res_message":"OK"
                        }
                    }
                }
            }
        },
        "/integration/v1/texts": {
            "post": {
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "example":{
                            "texts" : {
                                "api.stats.visits_timeseries.human":"Human visits",
                                "api.stats.visits_timeseries.bot":"Bot visits",
                                "api.threats.followup.view":"View Incidents"
                            },
                            "res": 0,
                            "res_message": "OK",
                        }
                    }
                }
            }
        }
    }
}